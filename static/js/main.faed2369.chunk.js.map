{"version":3,"sources":["component/Member.js","component/MemberList.js","component/MyInfoBox.js","socket/socketManager.js","rtc/rtc.js","utils/utils.js","component/dataDisplay/Line.js","component/dataDisplay/LineProgress.js","component/MyWorkBox.js","route/Main.js","route/Home.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","orange","color","palette","getContrastText","deepOrange","backgroundColor","cardHeader","alignItems","cardContent","display","justifyContent","cardStatusChip","alignSelf","Member","member","styles","Grid","item","xs","md","Card","CardHeader","className","avatar","Avatar","title","name","action","Chip","label","CardContent","memberBox","padding","marginTop","MemberList","memberList","offerToMember","container","spacing","map","key","id","workingStatusButton","restStatusButton","offStatusButton","MyInfoBox","myInfo","setMyInfo","useState","setLabel","selectColor","setSelectColor","changeMyStatus","status","useEffect","elevation","Button","variant","onClick","state","team","this","socket","io","userInfo","emit","addMember","removeMember","on","userList","forEach","console","log","off","user","message","onChatMessage","error","receiveDataMessage","type","targetkey","messageObject","pcList","stream","pcInfo","url","credential","username","getUserMedia","a","navigator","mediaDevices","audio","peerConnection","Promise","res","rej","then","window","myStream","pc","RTCPeerConnection","addStream","oniceconnectionstatechange","event","connectionState","handleOnIceConnectionStateChange","e","handleError","createOffer","sessionDescription","setLocalDescription","catch","createAnswer","receiveOffer","offer","setRemoteDescription","RTCSessionDescription","receiveAnswer","answer","addIceCandidate","candidate","getNewId","Math","round","random","root","props","line","width","height","borderRadius","isFirst","isLast","Line","LineProgress","lines","idx","progress","MyWorkBox","Box","mainBox","Main","useParams","teamId","userName","utils","setChatList","setMemberList","filter","receiveChatMessage","chat","chatList","data","rtc","onicecandidate","handleIceCandidate","onaddstream","handleRemoteStreamAdded","onremovestream","handleRemoteStreamRemoved","socketManager","sendMessageToUser","find","newMember","index","findIndex","newMemberList","updateMember","join","onJoin","offJoin","onMessageReceived","offMessageReceived","Container","maxWidth","Typography","home","position","flexDirection","background","fontSize","startButton","joinButton","Home","history","useHistory","started","setStarted","setTeamId","setUserName","handleEnterKey","joinTheTeam","push","TextField","joinTextField","onChange","target","value","onKeyPress","required","App","basename","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.faed2369.chunk.js","sourcesContent":["import { Avatar, Button, ButtonGroup, Card, CardContent, CardHeader, Chip, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    orange: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    cardHeader: {\r\n        alignItems: \"center\"\r\n    },\r\n    cardContent: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    cardStatusChip: {\r\n        alignSelf: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function Member({member}) {\r\n    const styles = useStyles();\r\n\r\n    return <Grid item xs={3} md={3}>\r\n        <Card>\r\n            <CardHeader\r\n                className={styles.cardHeader}\r\n                avatar={<Avatar className={styles.orange}>O</Avatar>}\r\n                title={member.name}\r\n                action={<Chip className={styles.cardStatusChip} color=\"primary\" label=\"업무중\" />}\r\n            >\r\n            </CardHeader>\r\n            <CardContent className={styles.cardContent}>\r\n            </CardContent>\r\n        </Card>\r\n    </Grid>\r\n}","import { Grid, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Member from './Member';\r\n\r\nconst useStyles = makeStyles({\r\n    memberBox: {\r\n        padding: \"10px 40px\",\r\n        marginTop: \"20px\"\r\n    }\r\n})\r\n\r\nexport default function MemberList({ memberList, offerToMember }) {\r\n    const styles = useStyles();\r\n\r\n    return <Grid container spacing={3} className={styles.memberBox}>\r\n        {memberList.map(member => <Member key={member.id} member={member}></Member>)}\r\n    </Grid>\r\n}","import { Avatar, Button, ButtonGroup, Card, CardContent, CardHeader, Chip, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    orange: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    cardHeader: {\r\n        alignItems: \"center\"\r\n    },\r\n    cardContent: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    cardStatusChip: {\r\n        alignSelf: \"center\"\r\n    },\r\n    workingStatusButton: {\r\n        color: '#5843BE'\r\n    },\r\n    restStatusButton: {\r\n        color: '#FFA067'\r\n    },\r\n    offStatusButton: {\r\n        color: '#282828'\r\n    }\r\n}));\r\n\r\nexport default function MyInfoBox({ myInfo, setMyInfo }) {\r\n    const styles = useStyles();\r\n    const [label, setLabel] = useState('');\r\n    const [selectColor, setSelectColor] = useState('primary');\r\n\r\n    useEffect(() => {\r\n        changeMyStatus(myInfo.status);\r\n    }, []);\r\n\r\n    function changeMyStatus (status) {\r\n        setMyInfo({...myInfo, status: status});\r\n        switch(status) {\r\n            case 'working': \r\n                setLabel('업무중')\r\n                setSelectColor('primary')\r\n                break;\r\n            case 'meeting': \r\n                setLabel('회의중')\r\n                setSelectColor('primary')\r\n                break;\r\n            case 'meal': \r\n                setLabel('식사중')\r\n                setSelectColor('secondary')\r\n                break;\r\n            case 'rest': \r\n                setLabel('휴식중')\r\n                setSelectColor('secondary')\r\n                break;\r\n            case 'offwork': \r\n                setLabel('퇴근')\r\n                setSelectColor('default')\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card elevation={0}>\r\n            <CardHeader\r\n                className={styles.cardHeader}\r\n                avatar={<Avatar className={styles.orange}>응</Avatar>}\r\n                title={myInfo.name}\r\n                action={<Chip className={styles.cardStatusChip} color={selectColor} label={label} />}\r\n            >\r\n            </CardHeader>\r\n            <CardContent className={styles.cardContent}>\r\n                <Grid item xs={1}></Grid>\r\n                <Grid item xs={2}>\r\n                    <Button\r\n                        variant={myInfo.status == 'working' ? \"contained\" : \"none\"}\r\n                        color={selectColor}\r\n                        onClick={() => {changeMyStatus('working')}}\r\n                    >업무</Button>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Button \r\n                        variant={myInfo.status == 'meeting' ? \"contained\" : \"none\"}\r\n                        color={selectColor}\r\n                        onClick={() => {changeMyStatus('meeting')}}\r\n                    >회의</Button>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Button \r\n                        variant={myInfo.status == 'rest' ? \"contained\" : \"none\"}\r\n                        color={selectColor}\r\n                        onClick={() => {changeMyStatus('rest')}}\r\n                    >휴식</Button>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Button \r\n                        variant={myInfo.status == 'meal' ? \"contained\" : \"none\"}\r\n                        color={selectColor}\r\n                        onClick={() => {changeMyStatus('meal')}}\r\n                    >식사</Button>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Button \r\n                        variant={myInfo.status == 'offwork' ? \"contained\" : \"none\"}\r\n                        color={selectColor}\r\n                        onClick={() => {changeMyStatus('offwork')}}\r\n                    >퇴근</Button>\r\n                </Grid>\r\n                <Grid item xs={1}></Grid>\r\n            </CardContent>\r\n\r\n        </Card>\r\n    )\r\n}","import { io } from 'socket.io-client';\r\n\r\nconst state = {\r\n    key: '',\r\n    id: '',\r\n    team: '',\r\n    name: ''\r\n}\r\n\r\nclass SocketManager {\r\n    constructor() {\r\n        this.socket = io(\"https://flawless-psyche-307902.du.r.appspot.com\");\r\n    }\r\n\r\n    join(userInfo) {\r\n        state.id = userInfo.id;\r\n        state.team = userInfo.team;\r\n        state.name = userInfo.name;\r\n        this.socket.emit(\"join\", userInfo);\r\n    }\r\n\r\n    onJoin(addMember, removeMember) {\r\n        this.socket.on('myInfo', userInfo => {\r\n            state.key = userInfo.key;\r\n        })\r\n\r\n        this.socket.on('userList', userList => {\r\n            userList.forEach(userInfo => {\r\n                console.log(userInfo);\r\n                addMember(userInfo);\r\n            })\r\n        })\r\n\r\n        this.socket.on(\"joinedUser\", member => {\r\n            console.log(member);\r\n            addMember(member);\r\n        });\r\n\r\n        this.socket.on(\"leavedUser\", key => {\r\n            removeMember(key);\r\n        });\r\n    }\r\n\r\n    offJoin() {\r\n        this.socket.off('myInfo');\r\n        this.socket.off('userList');\r\n        this.socket.off('joinedUser');\r\n        this.socket.off('leavedUser');\r\n    }\r\n\r\n    getMyInfo() {\r\n        return state;\r\n    }\r\n\r\n    sendChatMessageToAll(user, message) {\r\n        this.socket.emit(\"chatMessageToAll\", user, message);\r\n    }\r\n\r\n    onChatMessage(onChatMessage) {\r\n        this.socket.on('receiveChatMessage', onChatMessage);\r\n    }\r\n\r\n    onError(error) {\r\n        console.error(error);\r\n    }\r\n\r\n    onMessageReceived(receiveDataMessage) {\r\n        this.socket.on('receivePrivateMessage', receiveDataMessage);\r\n    }\r\n\r\n    offMessageReceived() {\r\n        this.socket.off('receivePrivateMessage')\r\n    }\r\n\r\n    sendMessageToUser(type, targetkey, message) {\r\n        const messageObject = {\r\n            id: state.id, // sender id\r\n            key: state.key, // sender key\r\n            type: type,\r\n            message: message\r\n        };\r\n        this.socket.emit('privateMessage', targetkey, messageObject);\r\n    }\r\n}\r\n\r\nexport default new SocketManager();","const state = {\r\n    pcList: {},\r\n    stream: null\r\n}\r\n\r\nconst pcInfo = {\r\n    'iceServers': [\r\n        { url: 'stun:34.64.112.126:3478' },\r\n        {\r\n            url: 'turn:34.64.112.126:3478?transport=udp',\r\n            credential: 'dmdcjfdl',\r\n            username: 'ekim'\r\n        }],\r\n    'DtlsSrtpKeyAgreement': true\r\n\r\n};\r\n\r\nasync function getUserMedia() {\r\n    if (state.stream) {\r\n        return state.stream;\r\n    }\r\n    state.stream = await navigator.mediaDevices.getUserMedia({ audio: true })\r\n    return state.stream;\r\n}\r\n\r\nfunction peerConnection(id) {\r\n    return new Promise((res, rej) => {\r\n        getUserMedia().then(stream => {\r\n            window.myStream = stream;\r\n            try {\r\n                const pc = new RTCPeerConnection(pcInfo);\r\n                pc.addStream(stream);\r\n                pc.oniceconnectionstatechange = (event) => { handleOnIceConnectionStateChange(id, event); };\r\n                state.pcList[id] = pc;\r\n                res(pc);\r\n            } catch (e) {\r\n                console.error(e);\r\n                rej(e)\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nfunction createOffer(id) {\r\n    console.log('createOffer: ' + id);\r\n    return new Promise((res, rej) => {\r\n        peerConnection(id)\r\n            .then(pc => {\r\n                state.pcList[id].createOffer(sessionDescription => {\r\n                    state.pcList[id].setLocalDescription(sessionDescription);\r\n                    res({ pc, sessionDescription });\r\n                }, handleError)\r\n            })\r\n            .catch(e => {\r\n                rej(e);\r\n            })\r\n    })\r\n}\r\n\r\nfunction receiveOffer(id, offer) {\r\n    console.log('receiveOffer: ' + id);\r\n    if (!state.pcList[id]) {\r\n        return new Promise(res => {\r\n            peerConnection(id)\r\n                .then(pc => {\r\n                    pc.setRemoteDescription(new RTCSessionDescription(offer));\r\n                    res(pc);\r\n                });\r\n        })\r\n    }\r\n}\r\n\r\nfunction createAnswer(id) {\r\n    return new Promise(res => {\r\n        if (state.pcList[id].connectionState !== \"connected\") {\r\n            state.pcList[id].createAnswer(sessionDescription => {\r\n                state.pcList[id].setLocalDescription(sessionDescription);\r\n                res(sessionDescription);\r\n            }, handleError);\r\n        }\r\n    })\r\n}\r\n\r\nfunction receiveAnswer(id, answer) {\r\n    state.pcList[id].setRemoteDescription(new RTCSessionDescription(answer));\r\n}\r\n\r\nfunction addIceCandidate(id, candidate) {\r\n    if (state.pcList[id])\r\n        state.pcList[id].addIceCandidate(candidate);\r\n}\r\n\r\nfunction handleOnIceConnectionStateChange(id, event) {\r\n    console.log(id, event);\r\n    console.log(state.pcList[id].connectionState)\r\n    if (state.pcList[id].connectionState === \"connected\") {\r\n        console.log('connected');\r\n    }\r\n    // if (peerConnection.connectionState === 'connected') {\r\n    //     // Peers connected!\r\n    // }\r\n}\r\n\r\nfunction handleError(error) {\r\n    console.error(error);\r\n}\r\n\r\n\r\nexport default {\r\n    getUserMedia,\r\n    createOffer,\r\n    createAnswer,\r\n    receiveOffer,\r\n    receiveAnswer,\r\n    addIceCandidate,\r\n}","function getNewId() {\r\n    return Math.round(Math.random() * 99999999);\r\n}\r\n\r\nexport default {\r\n    getNewId\r\n}","import { makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n    root: (props) => ({\r\n        backgroundColor: props.line.color,\r\n        width: `${props.line.width}%`,\r\n        height: '100%',\r\n        display: 'inline-block',\r\n        borderRadius: props.line.isFirst ? '0.3rem 0 0 0.3rem' : props.line.isLast ? '0 0.3rem 0.3rem 0' : '0',\r\n\r\n    })\r\n});\r\n\r\nexport default function Line(props) {\r\n    const styles = useStyles(props);\r\n    return <span className={styles.root}></span>\r\n}","import { makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Line from './Line';\r\n\r\nconst useStyles = makeStyles({\r\n    \r\n});\r\n\r\nexport default function LineProgress({className, lines}) {\r\n    return (\r\n        <div className={className}>\r\n            {lines.map((line, idx) => <Line key={idx} line={line}></Line>)}\r\n        </div>\r\n    )\r\n}","import { Box, makeStyles } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport LineProgress from './dataDisplay/LineProgress'\r\n\r\nconst useStyles = makeStyles({\r\n    progress: {\r\n        height: \"1.5rem\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: '0.3rem'\r\n    }\r\n});\r\n\r\nexport default function MyWorkBox({}) {\r\n    const styles = useStyles();\r\n    const [lines, setLines] = useState([{\r\n        color: '#C6BDFB',\r\n        width: 15,\r\n        isFirst: true,\r\n    }, {\r\n        color: '#FFCBC0',\r\n        width: 10\r\n    }, {\r\n        color: '#C6BDFB',\r\n        width: 35,\r\n        isLast: true\r\n    }]);\r\n\r\n    return (\r\n        <Box>\r\n            <LineProgress className={styles.progress} lines={lines}></LineProgress>\r\n        </Box>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport MemberList from '../component/MemberList';\r\nimport MyInfoBox from '../component/MyInfoBox';\r\nimport socketManager from '../socket/socketManager';\r\nimport rtc from '../rtc/rtc';\r\nimport utils from '../utils/utils';\r\nimport { makeStyles, Box, Container, Grid, Typography } from '@material-ui/core';\r\nimport MyWorkBox from '../component/MyWorkBox';\r\n\r\nconst useStyles = makeStyles({\r\n    mainBox: {\r\n        backgroundColor: \"#F1F3F6\",\r\n        padding: \"10px 20px\"\r\n    }\r\n})\r\n\r\nexport default function Main() {\r\n    const styles = useStyles();\r\n    const { teamId, userName } = useParams();\r\n    const [myInfo, setMyInfo] = useState({\r\n        key: '',\r\n        id: utils.getNewId(),\r\n        name: userName,\r\n        team: teamId,\r\n        status: 'working'\r\n    });\r\n    const [chatList, setChatList] = useState([]);\r\n    const [memberList, setMemberList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        socketManager.join(myInfo);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socketManager.onJoin(addMember, removeMember);\r\n\r\n        return () => {\r\n            socketManager.offJoin();\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        socketManager.onChatMessage(receiveChatMessage);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socketManager.onMessageReceived(receiveDataMessage);\r\n\r\n        return () => {\r\n            socketManager.offMessageReceived();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @param {Member} member\r\n     */\r\n    function addMember(member) {\r\n        setMemberList(memberList => [...memberList, member]);\r\n    }\r\n\r\n    function updateMember(newMember) {\r\n        const index = [...memberList].findIndex(member => {\r\n            return member.key === newMember.key\r\n        });\r\n        let newMemberList = [...memberList];\r\n        newMemberList[index] = newMember;\r\n        setMemberList(() => newMemberList);\r\n    }\r\n\r\n    function removeMember(key) {\r\n        setMemberList(memberList => memberList.filter(member => {\r\n            return member.key !== key;\r\n        }));\r\n    }\r\n\r\n    function sendChatMessage(message) {\r\n        const user = socketManager.getMyInfo();\r\n        socketManager.sendChatMessageToAll(user, message);\r\n    }\r\n\r\n    function receiveChatMessage(chat) {\r\n        setChatList(chatList => [...chatList, chat]);\r\n    }\r\n\r\n    function offerToMember(user) {\r\n        rtc.createOffer(user.id, user.key)\r\n            .then(({ pc, sessionDescription }) => {\r\n                pc.onicecandidate = (event) => { handleIceCandidate(user.key, event) };\r\n                pc.onaddstream = (event) => { handleRemoteStreamAdded(user.key, event); };\r\n                pc.onremovestream = handleRemoteStreamRemoved;\r\n                socketManager.sendMessageToUser('offer', user.key, sessionDescription);\r\n            });\r\n    }\r\n\r\n\r\n    function receiveDataMessage(data) {\r\n        switch (data.type) {\r\n            case 'offer':\r\n                rtc.receiveOffer(data.id, data.message)\r\n                    .then(pc => {\r\n                        pc.onicecandidate = (event) => { handleIceCandidate(data.key, event) };\r\n                        pc.onaddstream = (event) => { handleRemoteStreamAdded(data.key, event); };\r\n                        pc.onremovestream = handleRemoteStreamRemoved;\r\n                        rtc.createAnswer(data.id).then(sessionDescription => {\r\n                            socketManager.sendMessageToUser('answer', data.key, sessionDescription);\r\n                        })\r\n                    })\r\n                break;\r\n            case 'answer':\r\n                rtc.receiveAnswer(data.id, data.message);\r\n                break;\r\n            case 'candidate':\r\n                console.log('candidate');\r\n                console.log(data);\r\n                rtc.addIceCandidate(data.id, data.message);\r\n                break;\r\n            default:\r\n                console.log(data);\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleIceCandidate(key, event) {\r\n        if (event.candidate) {\r\n            socketManager.sendMessageToUser('candidate', key, event.candidate);\r\n        }\r\n    }\r\n\r\n    function handleRemoteStreamAdded(key, event) {\r\n        const member = [...memberList].find(member => member.key === key);\r\n        if (member) {\r\n            member.stream = event.stream;\r\n            updateMember(member);\r\n        }\r\n    }\r\n\r\n    function handleRemoteStreamRemoved(event) {\r\n        console.log(event);\r\n    }\r\n\r\n    function checkMemberList() {\r\n        console.log(memberList);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Grid container spacing={3} className={styles.mainBox}>\r\n                <Grid item xs={12} md={12}>\r\n                    <Typography>TeleTele</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <MyInfoBox\r\n                        myInfo={myInfo}\r\n                        setMyInfo={setMyInfo}\r\n                    ></MyInfoBox>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <MyWorkBox\r\n\r\n                    >\r\n                    </MyWorkBox>\r\n                </Grid>\r\n            </Grid>\r\n            <MemberList className={styles.mainBox}\r\n                memberList={memberList}\r\n                offerToMember={offerToMember}\r\n            ></MemberList>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Button, Box, makeStyles, TextField } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    home: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        color: '#fff',\r\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\r\n    },\r\n    title: {\r\n        height: '3rem',\r\n        fontSize: '2rem'\r\n    },\r\n    startButton: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        color: '#fff',\r\n        width: '200px',\r\n        height: '50px',\r\n        borderRadius: '30px',\r\n        fontSize: '1.2rem'\r\n    },\r\n    joinButton: {\r\n        fontSize: '1.2rem',\r\n        color: '#fff'\r\n    }\r\n})\r\n\r\nexport default function Home() {\r\n    const styles = useStyles();\r\n    const history = useHistory();\r\n    const [started, setStarted] = useState(false);\r\n    const [teamId, setTeamId] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n\r\n    function handleClick() {\r\n        setStarted(true);\r\n    }\r\n    function handleChange(e) {\r\n        setTeamId(e.target.value);\r\n    }\r\n    function handleChangeMyName(e) {\r\n        setUserName(e.target.value);\r\n    }\r\n    function handleEnterKey(e) {\r\n        if (e.key === 'Enter') {\r\n            started ? joinTheTeam() : setStarted(true);\r\n        }\r\n    }\r\n    function joinTheTeam() {\r\n        history.push(`./team/${teamId}/${userName}`);\r\n    }\r\n\r\n    return (\r\n        <Box className={styles.home}>\r\n            <h2 className={styles.title}>T E L E P A T H Y</h2>\r\n            <h3>\r\n                {!started && \r\n                <>\r\n                    <TextField\r\n                        label=\"MY NAME\"\r\n                        className={styles.joinTextField}\r\n                        onChange={handleChangeMyName}\r\n                        onKeyPress={handleEnterKey}\r\n                        required\r\n                    />\r\n                    <br/><br/>\r\n                    <Button\r\n                        className={styles.startButton}\r\n                        onClick={handleClick}>START\r\n                    </Button>\r\n                </>}\r\n                {started && <div>\r\n                    <Button\r\n                        className={styles.joinButton}\r\n                        onClick={joinTheTeam}>JOIN THE\r\n                    </Button>\r\n                    <TextField\r\n                        label=\"TEAM\"\r\n                        className={styles.joinTextField}\r\n                        onChange={handleChange}\r\n                        onKeyPress={handleEnterKey}\r\n                    />\r\n                </div>}\r\n            </h3>\r\n        </Box >\r\n    )\r\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Main from './route/Main';\nimport Home from './route/Home';\n\nfunction App() {\n  return (\n    <Router basename=\"/our-telepathy\">\n      <Switch>\n        <Route path=\"/team/:teamId/:userName\">\n          <Main />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}