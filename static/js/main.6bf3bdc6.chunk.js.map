{"version":3,"sources":["socket/socketManager.js","component/inviteDialog/InviteDialog.js","component/EmptyMember.js","dto/statusList.js","rtc/rtc.js","component/callDialog/CallDialog.js","component/Member.js","component/MemberList.js","store/myInfo/myInfo.reducer.js","store/workingHours/workingHours.reducer.js","utils/utils.js","component/MyInfoBox.js","customHook/useInterval.js","component/dataDisplay/Line.js","component/dataDisplay/LineProgress.js","component/MyWorkBox.js","route/Main.js","route/Home.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["this","socket","io","myInfo","member","emit","addMember","removeMember","on","userInfo","id","userList","forEach","off","onChangeStatus","error","console","receiveDataMessage","type","targetId","message","messageObject","useStyles","makeStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","linkText","width","dialogContent","display","flexDirection","justifyContent","height","InviteDialog","props","styles","inviteLink","window","location","href","slice","lastIndexOf","useState","title","link","userName","setUserName","onClose","open","Dialog","fullWidth","maxWidth","aria-labelledby","DialogTitle","className","dialogTitle","Typography","IconButton","onClick","DialogContent","TextField","label","onChange","e","target","value","required","aria-readonly","variant","onFocus","select","emptyContent","alignItems","plusIcon","EmptyMember","classes","setOpen","Grid","item","xs","md","Card","CardContent","Add","StatusDTO","statusInfo","status","buttonColor","lineColor","list","find","state","pcList","stream","pcInfo","url","credential","username","getUserMedia","a","navigator","mediaDevices","audio","peerConnection","Promise","res","rej","then","myStream","pc","RTCPeerConnection","addStream","oniceconnectionstatechange","event","log","connectionState","handleOnIceConnectionStateChange","handleError","createOffer","sessionDescription","setLocalDescription","catch","createAnswer","receiveOffer","offer","setRemoteDescription","RTCSessionDescription","receiveAnswer","answer","addIceCandidate","candidate","orange","getContrastText","deepOrange","backgroundColor","micOnIcon","endCallIcon","border","memberName","marginLeft","CallDialog","setTitle","micOn","setMicOn","handleRemoteStreamRemoved","useEffect","rtc","onicecandidate","socketManager","sendMessageToUser","handleIceCandidate","onaddstream","handleRemoteStreamAdded","onremovestream","offerToMember","Avatar","name","Mic","MicOff","DialogActions","setTimeout","CallEnd","cardHeader","cardContent","cardStatusChip","alignSelf","cardAction","Member","setLabel","selectColor","setSelectColor","statusList","getStatus","changeStatus","elevation","CardHeader","action","Chip","CardActions","Button","memberBox","padding","marginTop","MemberList","memberList","setMemberList","filter","foundMember","mem","newMember","index","findIndex","newMemberList","updateMember","onJoin","offJoin","offChangeStatus","container","map","SET_MY_INFO","CHANGE_STATUS","initialState","team","ADD","CHANGE_TIMELINE","CLEAR","CHANGE_TOTAL_TIME","workDate","Date","toISOString","startDate","endDate","currentStatus","currentIndex","totalTime","timeline","calcDateWidth","toFixed","getNewId","Math","round","random","workingStatusButton","restStatusButton","offStatusButton","MyInfoBox","teamId","useSelector","workingHours","dispatch","useDispatch","setTimeline","addTimeline","getFullDate","date","getFullYear","toString","getMonth","getDate","updateMyStatus","setMyInfo","utils","join","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","lastDate","avatar","root","line","borderRadius","minWidth","boxShadow","useStylesTooltip","tooltip","Line","startTime","getHours","getMinutes","lastTime","Tooltip","LineProgress","idx","progress","workingInputHoursBox","marginBottom","MyWorkBox","getFormattedTime","setStartTime","endTime","setEndTime","setHours","split","changeTotalTime","Box","defaultValue","inputProps","step","hours","minutes","mainBox","Main","useParams","data","onMessageReceived","offMessageReceived","Container","home","fontSize","startButton","background","joinButton","Home","history","useHistory","started","setStarted","setTeamId","handleEnterKey","key","trim","length","joinTheTeam","joinTextField","onKeyPress","push","App","basename","path","Boolean","hostname","match","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","enhancedReducer","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bf3bdc6.chunk.js","sourcesContent":["import { io } from 'socket.io-client';\n\nclass SocketManager {\n    constructor() {\n        this.socket = io(\"https://flawless-psyche-307902.du.r.appspot.com\");\n        // this.socket = io(\"https://localhost:8080\");\n        this.myInfo = null;\n    }\n\n    join(member) {\n        this.myInfo = member;\n        this.socket.emit(\"join\", member);\n    }\n\n    /**\n     * \n     * @param {Function} addMember \n     * @param {Function} removeMember \n     */\n    onJoin(addMember, removeMember) {\n        this.socket.on('myInfo', userInfo => {\n            this.myInfo.id = userInfo.id;\n        })\n\n        this.socket.on('userList', userList => {\n            userList.forEach(userInfo => {\n                addMember(userInfo);\n            })\n        })\n\n        this.socket.on(\"joinedUser\", member => {\n            addMember(member);\n        });\n\n        this.socket.on(\"leavedUser\", id => {\n            removeMember(id);\n        });\n    }\n\n    offJoin() {\n        this.socket.off('myInfo');\n        this.socket.off('userList');\n        this.socket.off('joinedUser');\n        this.socket.off('leavedUser');\n    }\n\n    getMyInfo() {\n        return this.myInfo;\n    }\n\n    changeStatus(member) {\n        this.socket.emit('changeStatus', member);\n    }\n    \n\n    onChangeStatus(onChangeStatus) {\n        this.socket.on('onChangeStatus', onChangeStatus);\n    }\n\n    offChangeStatus() {\n        this.socket.off('onChangeStatus');\n    }\n\n    onError(error) {\n        console.error(error);\n    }\n\n    onMessageReceived(receiveDataMessage) {\n        this.socket.on('receivePrivateMessage', receiveDataMessage);\n    }\n\n    offMessageReceived() {\n        this.socket.off('receivePrivateMessage')\n    }\n\n    sendMessageToUser(type, targetId, message) {\n        const messageObject = {\n            id: this.myInfo.id, // sender id\n            type: type,\n            message: message\n        };\n        this.socket.emit('privateMessage', targetId, messageObject);\n    }\n}\n\nexport default new SocketManager();","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, IconButton, TextField, Typography } from '@material-ui/core';\nimport Close from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500]\n    },\n    linkText: {\n        width: '100%'\n    },\n    dialogContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        height: '150px'\n    }\n}));\n\nexport default function InviteDialog(props) {\n    const styles = useStyles();\n    const inviteLink = window.location.href.slice(0, window.location.href.lastIndexOf('/') + 1);\n    const [title, setTitle] = useState('멤버 초대');\n    const [link, setLink] = useState(inviteLink);\n    const [userName, setUserName] = useState('');\n    const { onClose, open } = props;\n\n    function handleChangeInviteUserName(e) {\n        setUserName(e.target.value)\n    }\n\n    function handleFocus(e) {\n        e.target.select();\n    }\n\n    return (\n        <Dialog onClose={onClose} fullWidth={true} maxWidth={\"sm\"} aria-labelledby=\"dialog-title\" open={open}>\n            <DialogTitle id=\"dialog-title\" className={styles.dialogTitle}>\n                <Typography>{title}</Typography>\n                <IconButton onClick={onClose} className={styles.closeButton}>\n                    <Close />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent className={styles.dialogContent}>\n                <TextField\n                    label=\"초대할 사용자 이름\"\n                    onChange={handleChangeInviteUserName}\n                    value={userName}\n                    required\n                />\n                <TextField\n                    label=\"초대 링크\"\n                    className={styles.linkText}\n                    aria-readonly={true}\n                    value={link + userName}\n                    variant=\"outlined\"\n                    onFocus={handleFocus}\n                ></TextField>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nInviteDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired\n}","import { Card, CardContent, Grid, IconButton, makeStyles } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport InviteDialog from './inviteDialog/InviteDialog'\n\nconst useStyles = makeStyles({\n    emptyContent: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '140px'\n    },\n    plusIcon: {\n        width: '80px',\n        height: '80px',\n    }\n})\n\nexport default function EmptyMember() {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n    function handleOpenInviteDialog() {\n        setOpen(true);\n    }\n\n    function handleClose() {\n        setOpen(false);\n    }\n\n    return (\n        <Grid item xs={6} md={3}>\n            <Card variant=\"outlined\">\n                <CardContent className={classes.emptyContent}>\n                    <IconButton className={classes.plusIcon} onClick={handleOpenInviteDialog}>\n                        <Add />\n                    </IconButton>\n                </CardContent>\n            </Card>\n            <InviteDialog open={open} onClose={handleClose}></InviteDialog>\n        </Grid>\n    )\n}","class StatusDTO {\n    constructor(statusInfo) {\n        this.status = statusInfo.status;\n        this.buttonColor = statusInfo.buttonColor;\n        this.lineColor = statusInfo.lineColor;\n        this.label = statusInfo.label;\n    }\n}\n\nclass StatusDTOList {\n    constructor() {\n        this.list = [\n            new StatusDTO({\n                status: 'working',\n                buttonColor: 'primary',\n                lineColor: '#C6BDFB',\n                label: '업무중'\n            }),\n            new StatusDTO({\n                status: 'meeting',\n                buttonColor: 'primary',\n                lineColor: '#86B7E5',\n                label: '회의중'\n            }),\n            new StatusDTO({\n                status: 'meal',\n                buttonColor: 'secondary',\n                lineColor: '#75CD83',\n                label: '식사중'\n            }),\n            new StatusDTO({\n                status: 'rest',\n                buttonColor: 'secondary',\n                lineColor: '#FFCBC0',\n                label: '휴식중'\n            }),\n            new StatusDTO({\n                status: 'offwork',\n                buttonColor: 'default',\n                lineColor: '#8F95A4',\n                label: '퇴근'\n            })\n        ]\n    }\n\n    /**\n     * \n     * @param {String} status \n     * @returns {StatusDTO}\n     */\n    getStatus(status) {\n        const statusInfo = this.list.find(item => item.status === status);\n        return statusInfo ? statusInfo : new StatusDTO({\n            status: 'default',\n            buttonColor: 'default',\n            lineColor: '#eee',\n            label: '준비중'\n        });\n    }\n}\n\n\n\nexport default new StatusDTOList();","const state = {\n    pcList: {},\n    stream: null\n}\n\nconst pcInfo = {\n    'iceServers': [\n        { url: 'stun:34.64.112.126:3478' },\n        {\n            url: 'turn:34.64.112.126:3478?transport=udp',\n            credential: 'dmdcjfdl',\n            username: 'ekim'\n        }],\n    'DtlsSrtpKeyAgreement': true\n\n};\n\nasync function getUserMedia() {\n    if (state.stream) {\n        return state.stream;\n    }\n    state.stream = await navigator.mediaDevices.getUserMedia({ audio: true })\n    return state.stream;\n}\n\nfunction peerConnection(id) {\n    return new Promise((res, rej) => {\n        getUserMedia().then(stream => {\n            window.myStream = stream;\n            try {\n                const pc = new RTCPeerConnection(pcInfo);\n                pc.addStream(stream);\n                pc.oniceconnectionstatechange = (event) => { handleOnIceConnectionStateChange(id, event); };\n                state.pcList[id] = pc;\n                res(pc);\n            } catch (e) {\n                console.error(e);\n                rej(e)\n            }\n        })\n    });\n}\n\nfunction createOffer(id) {\n    console.log('createOffer: ' + id);\n    return new Promise((res, rej) => {\n        peerConnection(id)\n            .then(pc => {\n                state.pcList[id].createOffer(sessionDescription => {\n                    state.pcList[id].setLocalDescription(sessionDescription);\n                    res({ pc, sessionDescription });\n                }, handleError)\n            })\n            .catch(e => {\n                rej(e);\n            })\n    })\n}\n\nfunction receiveOffer(id, offer) {\n    console.log('receiveOffer: ' + id);\n    if (!state.pcList[id]) {\n        return new Promise(res => {\n            peerConnection(id)\n                .then(pc => {\n                    pc.setRemoteDescription(new RTCSessionDescription(offer));\n                    res(pc);\n                });\n        })\n    }\n}\n\nfunction createAnswer(id) {\n    return new Promise(res => {\n        if (state.pcList[id].connectionState !== \"connected\") {\n            state.pcList[id].createAnswer(sessionDescription => {\n                state.pcList[id].setLocalDescription(sessionDescription);\n                res(sessionDescription);\n            }, handleError);\n        }\n    })\n}\n\nfunction receiveAnswer(id, answer) {\n    state.pcList[id].setRemoteDescription(new RTCSessionDescription(answer));\n}\n\nfunction addIceCandidate(id, candidate) {\n    if (state.pcList[id])\n        state.pcList[id].addIceCandidate(candidate);\n}\n\nfunction handleOnIceConnectionStateChange(id, event) {\n    console.log(id, event);\n    console.log(state.pcList[id].connectionState)\n    if (state.pcList[id].connectionState === \"connected\") {\n        console.log('connected');\n    }\n}\n\nfunction handleError(error) {\n    console.error(error);\n}\n\n\nexport default {\n    getUserMedia,\n    createOffer,\n    createAnswer,\n    receiveOffer,\n    receiveAnswer,\n    addIceCandidate,\n}","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deepOrange } from '@material-ui/core/colors';\nimport { Avatar, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { CallEnd, Mic, MicOff } from '@material-ui/icons';\nimport socketManager from '../../socket/socketManager';\nimport rtc from '../../rtc/rtc';\n\nconst useStyles = makeStyles((theme) => ({\n    orange: {\n        color: theme.palette.getContrastText(deepOrange[500]),\n        backgroundColor: deepOrange[500],\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500]\n    },\n    micOnIcon: {\n        color: '#A30014'\n    },\n    endCallIcon: {\n        border: '1px solid gray',\n    },\n    dialogContent: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    memberName: {\n        marginLeft: theme.spacing(1)\n    }\n}));\n\nexport default function CallDialog(props) {\n    const styles = useStyles();\n    const [title, setTitle] = useState('연결중');\n    const [micOn, setMicOn] = useState(false);\n    const { member, onClose, open } = props;\n\n    useEffect(() => {\n        open && offerToMember(member);\n    })\n\n    function offerToMember(member) {\n        rtc.createOffer(member.id)\n            .then(({ pc, sessionDescription }) => {\n                pc.onicecandidate = (event) => { handleIceCandidate(member.id, event) };\n                pc.onaddstream = (event) => { handleRemoteStreamAdded(member.id, event); };\n                pc.onremovestream = handleRemoteStreamRemoved;\n                socketManager.sendMessageToUser('offer', member.id, sessionDescription);\n            });\n    }\n\n    function handleMicOn() {\n        setMicOn(!micOn);\n    }\n\n    function handleEndCall() {\n        setTitle('통화 종료');\n        setTimeout(() => {\n            onClose();\n        }, 3000);\n    }\n\n    function handleIceCandidate(id, event) {\n        if (event.candidate) {\n            socketManager.sendMessageToUser('candidate', id, event.candidate);\n        }\n    }\n\n    function handleRemoteStreamAdded(id, event) {\n        console.log(id, event);\n    }\n\n    function handleRemoteStreamRemoved(event) {\n        console.log(event);\n    }\n\n    return (\n        <Dialog fullWidth={true} maxWidth={\"xs\"} aria-labelledby=\"dialog-title\" open={open}>\n            <DialogTitle id=\"dialog-title\" className={styles.dialogTitle}>\n                <Typography>{title}</Typography>\n                <IconButton onClick={onClose} className={styles.closeButton}>\n                    <CloseIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent className={styles.dialogContent}>\n                <Avatar className={styles.orange}>응</Avatar>\n                <Typography className={styles.memberName}>\n                    {member.name}\n                </Typography>\n                <IconButton onClick={handleMicOn} className={styles.micOnIcon}>\n                    {micOn ? <Mic /> : <MicOff />}\n                </IconButton>\n            </DialogContent>\n            <DialogActions className={styles.dialogContent}>\n                <IconButton onClick={handleEndCall} color=\"secondary\">\n                    <CallEnd />\n                </IconButton>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nCallDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    member: PropTypes.any.isRequired\n}","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, Chip, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { deepOrange } from '@material-ui/core/colors';\nimport statusList from '../dto/statusList'\nimport CallDialog from './callDialog/CallDialog';\n\nconst useStyles = makeStyles((theme) => ({\n    orange: {\n        color: theme.palette.getContrastText(deepOrange[500]),\n        backgroundColor: deepOrange[500],\n    },\n    cardHeader: {\n        alignItems: \"center\"\n    },\n    cardContent: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    cardStatusChip: {\n        alignSelf: \"center\"\n    },\n    cardAction: {\n        width: '100%'\n    }\n}));\n\nexport default function Member({member}) {\n    const styles = useStyles();\n    const [open, setOpen] = useState(false);\n    const [label, setLabel] = useState('');\n    const [selectColor, setSelectColor] = useState('primary');\n\n    useEffect(() => {\n        changeStatus(member.status);\n    });\n\n    function changeStatus (status) {\n        const statusInfo = statusList.getStatus(status);\n        setLabel(statusInfo.label);\n        setSelectColor(statusInfo.buttonColor);\n    }\n\n    function handleClickCallDialogOpen() {\n        setOpen(true);\n    }\n\n    function handleClose() {\n        setOpen(false);\n    }\n\n    return <Grid item xs={6} md={3}>\n        <Card elevation={4}>\n            <CardHeader\n                className={styles.cardHeader}\n                action={<Chip className={styles.cardStatusChip} color={selectColor} label={label} />}\n            >\n            </CardHeader>\n            <CardContent className={styles.cardContent}>\n                <Avatar className={styles.orange}>O</Avatar>\n                <Typography>{member.name}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={styles.cardAction}\n                    onClick={handleClickCallDialogOpen}\n                >\n                    Call\n                </Button>\n            </CardActions>\n            <CallDialog member={member} open={open} onClose={handleClose}></CallDialog>\n        </Card>\n    </Grid>\n}\n\nMember.propTypes = {\n    member: PropTypes.any.isRequired\n}","import { Grid, makeStyles } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport socketManager from '../socket/socketManager';\nimport EmptyMember from './EmptyMember';\nimport Member from './Member';\n\nconst useStyles = makeStyles({\n    memberBox: {\n        padding: \"10px 40px\",\n        marginTop: \"20px\"\n    }\n})\n\nexport default function MemberList() {\n    const [memberList, setMemberList] = useState([]);\n    const styles = useStyles();\n\n    useEffect(() => {\n        socketManager.onJoin(addMember, removeMember);\n\n        return () => {\n            socketManager.offJoin();\n        }\n    });\n\n    useEffect(() => {\n        socketManager.onChangeStatus(onChangeStatus);\n\n        return () => {\n            socketManager.offChangeStatus();\n        }\n    });\n\n    function addMember(member) {\n        setMemberList(memberList => [...memberList, member]);\n    }\n\n    /**\n     * \n     * @param {string} id \n     */\n    function removeMember(id) {\n        setMemberList(memberList => memberList.filter(member => {\n            return member.id !== id;\n        }));\n    }\n\n    function updateMember(newMember) {\n        const index = [...memberList].findIndex(member => {\n            return member.id === newMember.id\n        });\n        let newMemberList = [...memberList];\n        newMemberList[index] = newMember;\n        setMemberList(() => newMemberList);\n    }\n\n    function onChangeStatus(member) {\n        const foundMember = [...memberList].find(mem => mem.id === member.id);\n        if (foundMember) {\n            foundMember.status = member.status;\n            updateMember(foundMember);\n        }\n    }\n\n    return <Grid container spacing={3} className={styles.memberBox}>\n        {memberList.map(member => <Member key={member.id} member={member}></Member>)}\n        <EmptyMember></EmptyMember>\n    </Grid>\n}","import { createStore } from \"redux\";\n\nconst SET_MY_INFO = '/myInfo/SET_MY_INFO';\nconst CHANGE_STATUS = '/myInfo/CHANGE_STATUS';\n\nexport const setMyInfo = myInfo => ({type: SET_MY_INFO, ...myInfo});\nexport const changeStatus = myInfo => ({type: CHANGE_STATUS, ...myInfo});\n\nconst initialState = {\n    id: '',\n    name: '',\n    team: '',\n    status: ''\n}\n\n\nexport default function myInfo(state = initialState, action) {\n    switch(action.type) {\n        case SET_MY_INFO:\n            return {\n                ...state,\n                id: action.id,\n                name: action.name,\n                team: action.team,\n                status: action.status\n            }\n        case CHANGE_STATUS:\n            return {\n                ...state,\n                status: action.status\n            }\n        default :\n            return state;\n    }\n}","const ADD = '/timeline/ADD';\nconst CHANGE_TIMELINE = '/timeline/CHANGE_TIMELINE';\nconst CLEAR = '/timeline/CLEAR';\nconst CHANGE_TOTAL_TIME = '/timeline/CHANGE_WORKING_HOURS';\n\nexport const addTimeline = workingHours => ({ type: ADD, ...workingHours });\nexport const changeTimeline = timeline => ({ type: CHANGE_TIMELINE, ...timeline });\nexport const clear = () => ({ type: CLEAR });\nexport const changeTotalTime = workingHours => ({ type: CHANGE_TOTAL_TIME, ...workingHours });\n\nconst initialState = {\n    workDate: new Date().toISOString(),\n    startDate: null,\n    endDate: null,\n    currentStatus: '',\n    currentIndex: -1,\n    totalTime: 60 * 60 * 1000,\n    timeline: []\n}\n\nexport default function workingHours(state = initialState, action) {\n    switch (action.type) {\n        case ADD:\n            return {\n                ...state,\n                currentIndex: state.currentIndex + 1,\n                currentStatus: action.status,\n                timeline: [\n                    ...state.timeline,\n                    {\n                        ...action.timeline,\n                        index: state.currentIndex + 1\n                    }\n                ]\n            }\n        case CHANGE_TIMELINE:\n            return {\n                ...state,\n                timeline: state.timeline.map(item => {\n                    if (item.index == action.index) {\n                        return {\n                            ...item,\n                            width: calcDateWidth(item.startDate, action.lastDate, state.totalTime),\n                            lastDate: action.lastDate\n                        };\n                    }\n                    return item;\n                })\n            }\n        case CHANGE_TOTAL_TIME:\n            return {\n                ...state,\n                totalTime: action.totalTime,\n                startDate: action.startDate ? action.startDate : state.startDate,\n                endDate: action.endDate ? action.endDate : state.endDate,\n                timeline: state.timeline.map(item => {\n                    return {\n                        ...item,\n                        width: calcDateWidth(item.startDate, item.lastDate, action.totalTime)\n                    }\n                })\n            }\n        case CLEAR:\n            return initialState;\n        default:\n            return state;\n    }\n}\n\nfunction calcDateWidth(startDate, endDate, totalTime) {\n    return ((new Date(endDate) - new Date(startDate)) / totalTime * 100).toFixed(2);\n}","function getNewId() {\n    return Math.round(Math.random() * 99999999);\n}\n\nexport default {\n    getNewId\n}","import { Avatar, Button, Card, CardContent, CardHeader, Chip, Grid, makeStyles } from '@material-ui/core';\nimport { deepOrange } from '@material-ui/core/colors';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport socketManager from '../socket/socketManager';\nimport { changeStatus, setMyInfo } from '../store/myInfo/myInfo.reducer'\nimport { addTimeline, changeTimeline, clear } from '../store/workingHours/workingHours.reducer';\nimport utils from '../utils/utils';\nimport statusList from '../dto/statusList';\nimport useInterval from '../customHook/useInterval';\n\nconst useStyles = makeStyles((theme) => ({\n    orange: {\n        color: theme.palette.getContrastText(deepOrange[500]),\n        backgroundColor: deepOrange[500],\n    },\n    cardHeader: {\n        alignItems: \"center\"\n    },\n    cardContent: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    cardStatusChip: {\n        alignSelf: \"center\"\n    },\n    workingStatusButton: {\n        color: '#5843BE'\n    },\n    restStatusButton: {\n        color: '#FFA067'\n    },\n    offStatusButton: {\n        color: '#282828'\n    }\n}));\n\nexport default function MyInfoBox({ teamId, userName }) {\n    const styles = useStyles();\n    const [label, setLabel] = useState('');\n    const [selectColor, setSelectColor] = useState('primary');\n    const myInfo = useSelector(state => state.myInfo);\n    const workingHours = useSelector(state => state.workingHours);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(setMyInfo({\n            id: myInfo.id ? myInfo.id : utils.getNewId(),\n            name: userName,\n            team: teamId,\n            status: myInfo.status ? myInfo.status : 'working'\n        }))\n\n        socketManager.join(myInfo);\n        updateMyStatus(myInfo.status);\n    }, []);\n\n    useEffect(() => {\n        socketManager.changeStatus(myInfo);\n    }, [myInfo])\n\n    useEffect(() => {\n        if (getFullDate(new Date(workingHours.workDate)) !== getFullDate(new Date)) {\n            dispatch(clear());\n        }\n    }, [])\n\n    useInterval(() => {\n        dispatch(changeTimeline({\n            index: workingHours.currentIndex,\n            lastDate: new Date().toISOString()\n        }))\n    }, 1000)\n\n    function setTimeline(status) {\n        dispatch(addTimeline({\n            status: status,\n            timeline: {\n                status: status,\n                color: statusList.getStatus(status).lineColor,\n                startDate: new Date().toISOString()\n            }\n        }))\n    }\n\n    function getFullDate(date) {\n        return date.getFullYear().toString() + (date.getMonth() + 1).toString() + date.getDate().toString();\n    }\n\n    function updateMyStatus(status) {\n        dispatch(changeStatus({ status: status }));\n        setTimeline(status);\n        const statusInfo = statusList.getStatus(status);\n        setLabel(statusInfo.label);\n        setSelectColor(statusInfo.buttonColor);\n    }\n\n    return (\n        <Card elevation={0}>\n            <CardHeader\n                className={styles.cardHeader}\n                avatar={<Avatar className={styles.orange}>응</Avatar>}\n                title={myInfo.name}\n                action={<Chip className={styles.cardStatusChip} color={selectColor} label={label} />}\n            >\n            </CardHeader>\n            <CardContent className={styles.cardContent}>\n                {(statusList.list.map((item, index) => (\n                        <Grid key={index} item xs=\"auto\">\n                            <Button\n                                variant={myInfo.status === item.status ? \"contained\" : \"text\"}\n                                color={selectColor}\n                                onClick={() => { updateMyStatus(item.status) }}\n                            >{item.label}</Button>\n                        </Grid>\n                    )\n                ))}\n            </CardContent>\n\n        </Card>\n    )\n}","import { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}","import { makeStyles, Tooltip } from '@material-ui/core';\nimport React from 'react';\nimport statusList from '../../dto/statusList'\n\nconst useStyles = makeStyles({\n    root: (props) => ({\n        backgroundColor: props.line.color,\n        width: `${props.line.width}%`,\n        height: '100%',\n        display: 'inline-block',\n        \"&:first-child\": {\n            borderRadius: '0.3rem 0 0 0.3rem'\n        },\n        \"&:last-child\": {\n            minWidth: '3px',\n            borderRadius: '0 0.3rem 0.3rem 0'\n        },\n        \"&:hover\": {\n            boxShadow: `0 0 2px 2px ${props.line.color}88`\n        }\n\n    })\n});\n\nconst useStylesTooltip = makeStyles({\n    tooltip: (props) => ({\n        backgroundColor: props.line.color\n    })\n})\n\nexport default function Line(props) {\n    const styles = useStyles(props);\n    const classes = useStylesTooltip(props);\n    const label = statusList.getStatus(props.line.status).label;\n    const startDate = new Date(props.line.startDate);\n    const startTime = startDate.getHours() + \":\" + startDate.getMinutes();\n    const lastDate = new Date(props.line.lastDate);\n    const lastTime = lastDate.getHours() + \":\" + lastDate.getMinutes();\n    return <Tooltip title={label + ' (' + startTime + ' ~ ' + lastTime + ')'} classes={classes}><span className={styles.root}></span></Tooltip>\n}","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport Line from './Line';\n\nexport default function LineProgress({className, timeline}) {\n    return (\n        <div className={className}>\n            {timeline.map((line, idx) => <Line key={idx} line={line}></Line>)}\n        </div>\n    )\n}","import { Box, makeStyles, TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeTotalTime } from '../store/workingHours/workingHours.reducer';\nimport LineProgress from './dataDisplay/LineProgress'\n\nconst useStyles = makeStyles({\n    progress: {\n        height: \"1.5rem\",\n        backgroundColor: \"#fff\",\n        borderRadius: '0.3rem'\n    },\n    workingInputHoursBox: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '5px'\n    }\n});\n\nexport default function MyWorkBox() {\n    const styles = useStyles();\n    const workingHours = useSelector(state => state.workingHours);\n    const [startTime, setStartTime] = useState(getFormattedTime(workingHours.startDate));\n    const [endTime, setEndTime] = useState(getFormattedTime(workingHours.endDate));\n    const dispatch = useDispatch();\n\n    function handleStartTime(e) {\n        setStartTime(e.target.value);\n    }\n\n    function handleEndTime(e) {\n        setEndTime(e.target.value);\n    }\n\n    useEffect(() => {\n        const startDate = new Date();\n        const endDate = new Date();\n        startDate.setHours(startTime.split(':')[0], startTime.split(':')[1]);\n        endDate.setHours(endTime.split(':')[0], endTime.split(':')[1]);\n        const totalTime = endDate - startDate;\n        if (totalTime > 0) {\n            dispatch(changeTotalTime({\n                totalTime: totalTime,\n                startDate: startDate,\n                endDate: endDate\n            }))\n        }\n    }, [startTime, endTime])\n\n    return (\n        <Box>\n            <Box className={styles.workingInputHoursBox}>\n                <TextField\n                    id=\"startTime\"\n                    label=\"출근\"\n                    type=\"time\"\n                    defaultValue={startTime}\n                    inputProps={{\n                        step: 60,\n                    }}\n                    onChange={handleStartTime}\n                />\n                <TextField\n                    id=\"endTime\"\n                    label=\"퇴근\"\n                    type=\"time\"\n                    defaultValue={endTime}\n                    inputProps={{\n                        step: 60\n                    }}\n                    onChange={handleEndTime}\n                />\n            </Box>\n            <LineProgress className={styles.progress} timeline={workingHours.timeline}></LineProgress>\n        </Box>\n    )\n}\n\nfunction getFormattedTime(date) {\n    const hours = new Date(date).getHours();\n    const minutes = new Date(date).getMinutes();\n    return (hours > 9 ? hours : '0' + hours) + \":\" + (minutes > 9 ? minutes : '0' + minutes);\n}","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MemberList from '../component/MemberList';\nimport MyInfoBox from '../component/MyInfoBox';\nimport socketManager from '../socket/socketManager';\nimport rtc from '../rtc/rtc';\nimport { makeStyles, Container, Grid, Typography } from '@material-ui/core';\nimport MyWorkBox from '../component/MyWorkBox';\n\nconst useStyles = makeStyles({\n    mainBox: {\n        backgroundColor: \"#F1F3F6\",\n        padding: \"10px 20px\"\n    }\n})\n\nexport default function Main() {\n    const styles = useStyles();\n    const { teamId, userName } = useParams();\n\n    useEffect(() => {\n        socketManager.onMessageReceived(receiveDataMessage);\n\n        return () => {\n            socketManager.offMessageReceived();\n        }\n    });\n\n    function receiveDataMessage(data) {\n        switch (data.type) {\n            case 'offer':\n                rtc.receiveOffer(data.id, data.message)\n                    .then(pc => {\n                        pc.onicecandidate = (event) => { handleIceCandidate(data.id, event) };\n                        pc.onaddstream = (event) => { handleRemoteStreamAdded(data.id, event); };\n                        pc.onremovestream = handleRemoteStreamRemoved;\n                        rtc.createAnswer(data.id).then(sessionDescription => {\n                            socketManager.sendMessageToUser('answer', data.id, sessionDescription);\n                        })\n                    })\n                break;\n            case 'answer':\n                rtc.receiveAnswer(data.id, data.message);\n                break;\n            case 'candidate':\n                console.log('candidate');\n                console.log(data);\n                rtc.addIceCandidate(data.id, data.message);\n                break;\n            default:\n                console.log(data);\n                break;\n        }\n    }\n\n    function handleIceCandidate(id, event) {\n        if (event.candidate) {\n            socketManager.sendMessageToUser('candidate', id, event.candidate);\n        }\n    }\n\n    function handleRemoteStreamAdded(id, event) {\n        console.log(id, event);\n    }\n\n    function handleRemoteStreamRemoved(event) {\n        console.log(event);\n    }\n\n    return (\n        <Container maxWidth=\"md\">\n            <Grid container spacing={3} className={styles.mainBox}>\n                <Grid item xs={12} md={12}>\n                    <Typography>TeleTele</Typography>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <MyInfoBox\n                        userName={userName}\n                        teamId={teamId}\n                    ></MyInfoBox>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <MyWorkBox\n\n                    >\n                    </MyWorkBox>\n                </Grid>\n            </Grid>\n            <MemberList className={styles.mainBox}></MemberList>\n        </Container>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Button, Box, makeStyles, TextField } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles({\n    home: {\n        position: 'absolute',\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column'\n    },\n    title: {\n        height: '3rem',\n        fontSize: '2rem'\n    },\n    startButton: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        color: '#fff',\n        width: '200px',\n        height: '50px',\n        borderRadius: '30px',\n        fontSize: '1.2rem'\n    },\n    joinButton: {\n        fontSize: '1.2rem'\n    }\n})\n\nexport default function Home() {\n    const styles = useStyles();\n    const history = useHistory();\n    const [started, setStarted] = useState(false);\n    const [teamId, setTeamId] = useState('');\n    const [userName, setUserName] = useState('');\n    const myInfo = useSelector(state => state.myInfo);\n\n    useEffect(() => {\n        if (myInfo.id) {\n            setTeamId(myInfo.team);\n            setUserName(myInfo.name);\n        }\n    }, []);\n\n    function handleChange(e) {\n        setTeamId(e.target.value);\n    }\n    \n    function handleChangeMyName(e) {\n        setUserName(e.target.value);\n    }\n    function handleEnterKey(e) {\n        if (e.key === 'Enter') {\n            if (!started && teamId.trim().length <= 0) {\n                return;\n            } else if (started && userName.trim().length <= 0) {\n                return;\n            }\n\n            started ? setStarted(true) : joinTheTeam();\n        }\n    }\n    function joinTheTeam() {\n        if (!started && teamId.trim().length <= 0) {\n            return;\n        }\n        setStarted(true);\n    }\n    function handleClick() {\n        if (started && userName.trim().length <= 0) {\n            return;\n        }\n        history.push(`/team/${teamId}/${userName}`);\n    }\n\n    return (\n        <Box className={styles.home}>\n            <h2 className={styles.title}>TeleTele</h2>\n            <h3>\n                {!started && <>\n                    <TextField\n                        label=\"TEAM\"\n                        className={styles.joinTextField}\n                        onChange={handleChange}\n                        onKeyPress={handleEnterKey}\n                        value={teamId}\n                        required\n                    />\n                    <br/><br/>\n                    <Button\n                        className={styles.startButton}\n                        onClick={joinTheTeam}\n                    >JOIN\n                    </Button>\n                </>}\n                {started && <>\n                    <TextField\n                        label=\"MY NAME\"\n                        className={styles.joinTextField}\n                        onChange={handleChangeMyName}\n                        onKeyPress={handleEnterKey}\n                        value={userName}\n                        required\n                    />\n                    <br/><br/>\n                    <Button\n                        className={styles.startButton}\n                        onClick={handleClick}>START\n                    </Button>\n                </>}\n            </h3>\n        </Box >\n    )\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Main from './route/Main';\nimport Home from './route/Home';\n\nfunction App() {\n  return (\n    <Router basename=\"/our-telepathy\">\n      <Switch>\n        <Route path=\"/team/:teamId/:userName\">\n          <Main />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// reducers/index.js\nimport { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport myInfo from \"./myInfo/myInfo.reducer\";\nimport workingHours from \"./workingHours/workingHours.reducer\";\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    whitelist: [\"myInfo\", \"workingHours\"]\n};\n\nconst rootReducer = combineReducers({\n    myInfo,\n    workingHours\n});\n\nexport default persistReducer(persistConfig, rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './store';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst enhancedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(enhancedReducer);\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}