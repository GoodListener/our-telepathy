{"version":3,"sources":["socket/socketManager.js","component/Member.js","component/MemberList.js","store/myInfo/myInfo.reducer.js","store/workingHours/workingHours.reducer.js","utils/utils.js","component/MyInfoBox.js","rtc/rtc.js","component/dataDisplay/Line.js","component/dataDisplay/LineProgress.js","component/MyWorkBox.js","route/Main.js","route/Home.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["this","socket","io","myInfo","member","emit","addMember","removeMember","on","userInfo","id","userList","forEach","off","onChangeStatus","error","console","receiveDataMessage","type","targetId","message","messageObject","useStyles","makeStyles","theme","orange","color","palette","getContrastText","deepOrange","backgroundColor","cardHeader","alignItems","cardContent","display","justifyContent","cardStatusChip","alignSelf","cardAction","width","Member","styles","useState","label","setLabel","selectColor","setSelectColor","useEffect","status","changeStatus","Grid","item","xs","md","Card","CardHeader","className","action","Chip","CardContent","Avatar","Typography","name","CardActions","Button","variant","memberBox","padding","marginTop","MemberList","offerToMember","memberList","setMemberList","filter","foundMember","find","mem","newMember","index","findIndex","newMemberList","updateMember","socketManager","onJoin","offJoin","offChangeStatus","container","spacing","map","key","initialState","team","ADD","CLEAR","startDate","Date","setHours","endDate","toISOString","currentStatus","lastIndex","timeline","getNewId","Math","round","random","workingStatusButton","restStatusButton","offStatusButton","MyInfoBox","teamId","userName","useSelector","state","workingHours","dispatch","useDispatch","setTimeline","getTimelineColor","calcDateWidth","lastDate","lastTimeline","totalTime","toFixed","getFullDate","date","getFullYear","toString","getMonth","getDate","updateMyStatus","setMyInfo","utils","join","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","elevation","avatar","title","onClick","pcList","stream","pcInfo","url","credential","username","getUserMedia","a","navigator","mediaDevices","audio","peerConnection","Promise","res","rej","then","window","myStream","pc","RTCPeerConnection","addStream","oniceconnectionstatechange","event","log","connectionState","handleOnIceConnectionStateChange","e","handleError","createOffer","sessionDescription","setLocalDescription","catch","createAnswer","receiveOffer","offer","setRemoteDescription","RTCSessionDescription","receiveAnswer","answer","addIceCandidate","candidate","root","props","line","height","borderRadius","minWidth","Line","LineProgress","idx","progress","MyWorkBox","Box","mainBox","Main","useParams","data","rtc","onicecandidate","handleIceCandidate","onaddstream","handleRemoteStreamAdded","onremovestream","handleRemoteStreamRemoved","sendMessageToUser","onMessageReceived","offMessageReceived","Container","maxWidth","user","home","position","flexDirection","fontSize","startButton","background","joinButton","Home","history","useHistory","started","setStarted","setTeamId","setUserName","handleEnterKey","trim","length","joinTheTeam","TextField","joinTextField","onChange","target","value","onKeyPress","required","push","App","basename","path","Boolean","location","hostname","match","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","enhancedReducer","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6170abe9.chunk.js","sourcesContent":["import { io } from 'socket.io-client';\r\n\r\nclass SocketManager {\r\n    constructor() {\r\n        this.socket = io(\"https://flawless-psyche-307902.du.r.appspot.com\");\r\n        // this.socket = io(\"https://localhost:8080\");\r\n        this.myInfo = null;\r\n    }\r\n\r\n    join(member) {\r\n        this.myInfo = member;\r\n        this.socket.emit(\"join\", member);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Function} addMember \r\n     * @param {Function} removeMember \r\n     */\r\n    onJoin(addMember, removeMember) {\r\n        this.socket.on('myInfo', userInfo => {\r\n            this.myInfo.id = userInfo.id;\r\n        })\r\n\r\n        this.socket.on('userList', userList => {\r\n            userList.forEach(userInfo => {\r\n                addMember(userInfo);\r\n            })\r\n        })\r\n\r\n        this.socket.on(\"joinedUser\", member => {\r\n            addMember(member);\r\n        });\r\n\r\n        this.socket.on(\"leavedUser\", id => {\r\n            removeMember(id);\r\n        });\r\n    }\r\n\r\n    offJoin() {\r\n        this.socket.off('myInfo');\r\n        this.socket.off('userList');\r\n        this.socket.off('joinedUser');\r\n        this.socket.off('leavedUser');\r\n    }\r\n\r\n    getMyInfo() {\r\n        return this.myInfo;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Member} member \r\n     */\r\n    changeStatus(member) {\r\n        this.socket.emit('changeStatus', member);\r\n    }\r\n    \r\n\r\n    onChangeStatus(onChangeStatus) {\r\n        this.socket.on('onChangeStatus', onChangeStatus);\r\n    }\r\n\r\n    offChangeStatus() {\r\n        this.socket.off('onChangeStatus');\r\n    }\r\n\r\n    onError(error) {\r\n        console.error(error);\r\n    }\r\n\r\n    onMessageReceived(receiveDataMessage) {\r\n        this.socket.on('receivePrivateMessage', receiveDataMessage);\r\n    }\r\n\r\n    offMessageReceived() {\r\n        this.socket.off('receivePrivateMessage')\r\n    }\r\n\r\n    sendMessageToUser(type, targetId, message) {\r\n        const messageObject = {\r\n            id: this.myInfo.id, // sender id\r\n            type: type,\r\n            message: message\r\n        };\r\n        this.socket.emit('privateMessage', targetId, messageObject);\r\n    }\r\n}\r\n\r\nexport default new SocketManager();","import { Avatar, Button, Card, CardActions, CardContent, CardHeader, Chip, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    orange: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    cardHeader: {\r\n        alignItems: \"center\"\r\n    },\r\n    cardContent: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    cardStatusChip: {\r\n        alignSelf: \"center\"\r\n    },\r\n    cardAction: {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nexport default function Member({member}) {\r\n    const styles = useStyles();\r\n    const [label, setLabel] = useState('');\r\n    const [selectColor, setSelectColor] = useState('primary');\r\n\r\n    useEffect(() => {\r\n        changeStatus(member.status);\r\n    });\r\n\r\n    function changeStatus (status) {\r\n        switch(status) {\r\n            case 'working': \r\n                setLabel('업무중')\r\n                setSelectColor('primary')\r\n                break;\r\n            case 'meeting': \r\n                setLabel('회의중')\r\n                setSelectColor('primary')\r\n                break;\r\n            case 'meal': \r\n                setLabel('식사중')\r\n                setSelectColor('secondary')\r\n                break;\r\n            case 'rest': \r\n                setLabel('휴식중')\r\n                setSelectColor('secondary')\r\n                break;\r\n            case 'offwork': \r\n                setLabel('퇴근')\r\n                setSelectColor('default')\r\n                break;\r\n            default :\r\n                setLabel('업무중')\r\n                setSelectColor('primary')\r\n                break;\r\n        }\r\n    }\r\n\r\n    return <Grid item xs={6} md={3}>\r\n        <Card>\r\n            <CardHeader\r\n                className={styles.cardHeader}\r\n                action={<Chip className={styles.cardStatusChip} color={selectColor} label={label} />}\r\n            >\r\n            </CardHeader>\r\n            <CardContent className={styles.cardContent}>\r\n                <Avatar className={styles.orange}>O</Avatar>\r\n                <Typography>{member.name}</Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={styles.cardAction}\r\n                >\r\n                    Call\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    </Grid>\r\n}","import { Grid, makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport socketManager from '../socket/socketManager';\r\nimport Member from './Member';\r\n\r\nconst useStyles = makeStyles({\r\n    memberBox: {\r\n        padding: \"10px 40px\",\r\n        marginTop: \"20px\"\r\n    }\r\n})\r\n\r\nexport default function MemberList({ offerToMember }) {\r\n    const [memberList, setMemberList] = useState([]);\r\n    const styles = useStyles();\r\n\r\n    useEffect(() => {\r\n        socketManager.onJoin(addMember, removeMember);\r\n\r\n        return () => {\r\n            socketManager.offJoin();\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        socketManager.onChangeStatus(onChangeStatus);\r\n\r\n        return () => {\r\n            socketManager.offChangeStatus();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @param {Member} member\r\n     */\r\n     function addMember(member) {\r\n        setMemberList(memberList => [...memberList, member]);\r\n    }\r\n\r\n    \r\n    function removeMember(id) {\r\n        setMemberList(memberList => memberList.filter(member => {\r\n            return member.id !== id;\r\n        }));\r\n    }\r\n    \r\n    function updateMember(newMember) {\r\n        const index = [...memberList].findIndex(member => {\r\n            return member.id === newMember.id\r\n        });\r\n        let newMemberList = [...memberList];\r\n        newMemberList[index] = newMember;\r\n        setMemberList(() => newMemberList);\r\n    }\r\n\r\n    function onChangeStatus(member) {\r\n        const foundMember = [...memberList].find(mem => mem.id === member.id);\r\n        if (foundMember) {\r\n            foundMember.status = member.status;\r\n            updateMember(foundMember);\r\n        }\r\n    }\r\n\r\n    return <Grid container spacing={3} className={styles.memberBox}>\r\n        {memberList.map(member => <Member key={member.id} member={member}></Member>)}\r\n    </Grid>\r\n}","import { createStore } from \"redux\";\r\n\r\nconst SET_MY_INFO = '/myInfo/SET_MY_INFO';\r\nconst CHANGE_STATUS = '/myInfo/CHANGE_STATUS';\r\n\r\nexport const setMyInfo = myInfo => ({type: SET_MY_INFO, ...myInfo});\r\nexport const changeStatus = myInfo => ({type: CHANGE_STATUS, ...myInfo});\r\n\r\nconst initialState = {\r\n    id: '',\r\n    name: '',\r\n    team: '',\r\n    status: ''\r\n}\r\n\r\n\r\nexport default function myInfo(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_MY_INFO:\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n                name: action.name,\r\n                team: action.team,\r\n                status: action.status\r\n            }\r\n        case CHANGE_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}","const ADD = '/timeline/ADD';\r\nconst CHANGE_TIMELINE = '/timeline/CHANGE_TIMELINE';\r\nconst CLEAR = '/timeline/CLEAR';\r\n\r\nexport const addTimeline = timeline => ({ type: ADD, ...timeline });\r\nexport const changeTimeline = timeline => ({ type: CHANGE_TIMELINE, ...timeline });\r\nexport const clear = () => ({ type: CLEAR });\r\n\r\nconst startDate = new Date();\r\nstartDate.setHours(9, 0, 0, 0);\r\nconst endDate = new Date();\r\nendDate.setHours(18, 0, 0, 0);\r\n\r\nconst initialState = {\r\n    startDate: startDate.toISOString(),\r\n    endDate: endDate.toISOString(),\r\n    currentStatus: '',\r\n    lastIndex: -1,\r\n    timeline: []\r\n}\r\n\r\nexport default function workingHours(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD:\r\n            return {\r\n                ...state,\r\n                lastIndex: state.lastIndex + 1,\r\n                currentStatus: action.status,\r\n                timeline: [\r\n                    ...state.timeline,\r\n                    {\r\n                        ...action.timeline,\r\n                        index: state.lastIndex + 1\r\n                    }\r\n                ]\r\n            }\r\n        case CHANGE_TIMELINE:\r\n            return {\r\n                ...state,\r\n                timeline: state.timeline.map(item => {\r\n                    if (item.index == action.index) {\r\n                        return {\r\n                            ...item,\r\n                            width: action.width,\r\n                            lastDate: action.lastDate\r\n                        };\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        case CLEAR:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}","function getNewId() {\r\n    return Math.round(Math.random() * 99999999);\r\n}\r\n\r\nexport default {\r\n    getNewId\r\n}","import { Avatar, Button, Card, CardContent, CardHeader, Chip, Grid, makeStyles } from '@material-ui/core';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport socketManager from '../socket/socketManager';\r\nimport { changeStatus, setMyInfo } from '../store/myInfo/myInfo.reducer'\r\nimport { addTimeline, changeTimeline, clear } from '../store/workingHours/workingHours.reducer';\r\nimport utils from '../utils/utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    orange: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    cardHeader: {\r\n        alignItems: \"center\"\r\n    },\r\n    cardContent: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    cardStatusChip: {\r\n        alignSelf: \"center\"\r\n    },\r\n    workingStatusButton: {\r\n        color: '#5843BE'\r\n    },\r\n    restStatusButton: {\r\n        color: '#FFA067'\r\n    },\r\n    offStatusButton: {\r\n        color: '#282828'\r\n    }\r\n}));\r\n\r\nfunction useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest function.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }\r\n\r\nexport default function MyInfoBox({ teamId, userName }) {\r\n    const styles = useStyles();\r\n    const [label, setLabel] = useState('');\r\n    const [selectColor, setSelectColor] = useState('primary');\r\n    const myInfo = useSelector(state => state.myInfo);\r\n    const workingHours = useSelector(state => state.workingHours);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setMyInfo({\r\n            id: myInfo.id ? myInfo.id : utils.getNewId(),\r\n            name: userName,\r\n            team: teamId,\r\n            status: myInfo.status ? myInfo.status : 'working'\r\n        }))\r\n\r\n        socketManager.join(myInfo);\r\n        updateMyStatus(myInfo.status);\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        socketManager.changeStatus(myInfo);\r\n    }, [myInfo])\r\n\r\n    useEffect(() => {\r\n        if (getFullDate(new Date(workingHours.startDate)) !== getFullDate(new Date)) {\r\n            dispatch(clear());\r\n        }\r\n    }, [])\r\n\r\n    useInterval(() => {\r\n        dispatch(changeTimeline({\r\n            width: calcDateWidth(),\r\n            index: workingHours.lastIndex,\r\n            lastDate: new Date().toISOString()\r\n        }))\r\n    }, [1000 * 60])\r\n\r\n    function setTimeline(status) {\r\n        const color = getTimelineColor(status);\r\n        const width = calcDateWidth();\r\n        dispatch(addTimeline({\r\n            status: status,\r\n            timeline: {\r\n                status: status,\r\n                color: color,\r\n                width: width,\r\n                startDate: new Date().toISOString(),\r\n                lastDate: new Date().toISOString()\r\n            }\r\n        }))\r\n    }\r\n\r\n    function getTimelineColor(status) {\r\n        switch (status) {\r\n            case 'working':\r\n                return '#C6BDFB';\r\n            case 'rest':\r\n                return '#FFCBC0';\r\n            case 'meal':\r\n                return '#75CD83';\r\n            case 'meeting':\r\n                return '#86B7E5';\r\n            case 'offwork':\r\n                return '#8F95A4'\r\n        }\r\n    }\r\n\r\n    function calcDateWidth() {\r\n        const lastTimeline = workingHours.timeline[workingHours.lastIndex];\r\n        const totalTime = new Date(workingHours.endDate) - new Date(workingHours.startDate);\r\n        if (lastTimeline) { // 있으면\r\n            return ((new Date() - new Date(lastTimeline.startDate)) / totalTime * 100).toFixed(1);\r\n        } else {\r\n            return ((new Date() - new Date(workingHours.startDate)) / totalTime * 100).toFixed(1);\r\n        }\r\n    }\r\n\r\n    function getFullDate(date) {\r\n        return date.getFullYear().toString() + (date.getMonth() + 1).toString() + date.getDate().toString();\r\n    }\r\n\r\n    function updateMyStatus (status) {\r\n        dispatch(changeStatus({status: status}));\r\n        setTimeline(status);\r\n        switch(status) {\r\n            case 'working': \r\n                setLabel('업무중')\r\n                setSelectColor('primary')\r\n                break;\r\n            case 'meeting': \r\n                setLabel('회의중')\r\n                setSelectColor('primary')\r\n                break;\r\n            case 'meal': \r\n                setLabel('식사중')\r\n                setSelectColor('secondary')\r\n                break;\r\n            case 'rest': \r\n                setLabel('휴식중')\r\n                setSelectColor('secondary')\r\n                break;\r\n            case 'offwork': \r\n                setLabel('퇴근')\r\n                setSelectColor('default')\r\n                break;\r\n            default :\r\n                setLabel('업무중')\r\n                setSelectColor('primary')\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card elevation={0}>\r\n            <CardHeader\r\n                className={styles.cardHeader}\r\n                avatar={<Avatar className={styles.orange}>응</Avatar>}\r\n                title={myInfo.name}\r\n                action={<Chip className={styles.cardStatusChip} color={selectColor} label={label} />}\r\n            >\r\n            </CardHeader>\r\n            <CardContent className={styles.cardContent}>\r\n                <Grid item xs=\"auto\">\r\n                    <Button\r\n                        variant={myInfo.status === 'working' ? \"contained\" : \"text\"}\r\n                        color={selectColor}\r\n                        onClick={() => {updateMyStatus('working')}}\r\n                    >업무</Button>\r\n                </Grid>\r\n                <Grid item xs=\"auto\">\r\n                    <Button \r\n                        variant={myInfo.status === 'meeting' ? \"contained\" : \"text\"}\r\n                        color={selectColor}\r\n                        onClick={() => {updateMyStatus('meeting')}}\r\n                    >회의</Button>\r\n                </Grid>\r\n                <Grid item xs=\"auto\">\r\n                    <Button \r\n                        variant={myInfo.status === 'rest' ? \"contained\" : \"text\"}\r\n                        color={selectColor}\r\n                        onClick={() => {updateMyStatus('rest')}}\r\n                    >휴식</Button>\r\n                </Grid>\r\n                <Grid item xs=\"auto\">\r\n                    <Button \r\n                        variant={myInfo.status === 'meal' ? \"contained\" : \"text\"}\r\n                        color={selectColor}\r\n                        onClick={() => {updateMyStatus('meal')}}\r\n                    >식사</Button>\r\n                </Grid>\r\n                <Grid item xs=\"auto\">\r\n                    <Button \r\n                        variant={myInfo.status === 'offwork' ? \"contained\" : \"text\"}\r\n                        color={selectColor}\r\n                        onClick={() => {updateMyStatus('offwork')}}\r\n                    >퇴근</Button>\r\n                </Grid>\r\n            </CardContent>\r\n\r\n        </Card>\r\n    )\r\n}","const state = {\r\n    pcList: {},\r\n    stream: null\r\n}\r\n\r\nconst pcInfo = {\r\n    'iceServers': [\r\n        { url: 'stun:34.64.112.126:3478' },\r\n        {\r\n            url: 'turn:34.64.112.126:3478?transport=udp',\r\n            credential: 'dmdcjfdl',\r\n            username: 'ekim'\r\n        }],\r\n    'DtlsSrtpKeyAgreement': true\r\n\r\n};\r\n\r\nasync function getUserMedia() {\r\n    if (state.stream) {\r\n        return state.stream;\r\n    }\r\n    state.stream = await navigator.mediaDevices.getUserMedia({ audio: true })\r\n    return state.stream;\r\n}\r\n\r\nfunction peerConnection(id) {\r\n    return new Promise((res, rej) => {\r\n        getUserMedia().then(stream => {\r\n            window.myStream = stream;\r\n            try {\r\n                const pc = new RTCPeerConnection(pcInfo);\r\n                pc.addStream(stream);\r\n                pc.oniceconnectionstatechange = (event) => { handleOnIceConnectionStateChange(id, event); };\r\n                state.pcList[id] = pc;\r\n                res(pc);\r\n            } catch (e) {\r\n                console.error(e);\r\n                rej(e)\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nfunction createOffer(id) {\r\n    console.log('createOffer: ' + id);\r\n    return new Promise((res, rej) => {\r\n        peerConnection(id)\r\n            .then(pc => {\r\n                state.pcList[id].createOffer(sessionDescription => {\r\n                    state.pcList[id].setLocalDescription(sessionDescription);\r\n                    res({ pc, sessionDescription });\r\n                }, handleError)\r\n            })\r\n            .catch(e => {\r\n                rej(e);\r\n            })\r\n    })\r\n}\r\n\r\nfunction receiveOffer(id, offer) {\r\n    console.log('receiveOffer: ' + id);\r\n    if (!state.pcList[id]) {\r\n        return new Promise(res => {\r\n            peerConnection(id)\r\n                .then(pc => {\r\n                    pc.setRemoteDescription(new RTCSessionDescription(offer));\r\n                    res(pc);\r\n                });\r\n        })\r\n    }\r\n}\r\n\r\nfunction createAnswer(id) {\r\n    return new Promise(res => {\r\n        if (state.pcList[id].connectionState !== \"connected\") {\r\n            state.pcList[id].createAnswer(sessionDescription => {\r\n                state.pcList[id].setLocalDescription(sessionDescription);\r\n                res(sessionDescription);\r\n            }, handleError);\r\n        }\r\n    })\r\n}\r\n\r\nfunction receiveAnswer(id, answer) {\r\n    state.pcList[id].setRemoteDescription(new RTCSessionDescription(answer));\r\n}\r\n\r\nfunction addIceCandidate(id, candidate) {\r\n    if (state.pcList[id])\r\n        state.pcList[id].addIceCandidate(candidate);\r\n}\r\n\r\nfunction handleOnIceConnectionStateChange(id, event) {\r\n    console.log(id, event);\r\n    console.log(state.pcList[id].connectionState)\r\n    if (state.pcList[id].connectionState === \"connected\") {\r\n        console.log('connected');\r\n    }\r\n}\r\n\r\nfunction handleError(error) {\r\n    console.error(error);\r\n}\r\n\r\n\r\nexport default {\r\n    getUserMedia,\r\n    createOffer,\r\n    createAnswer,\r\n    receiveOffer,\r\n    receiveAnswer,\r\n    addIceCandidate,\r\n}","import { makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n    root: (props) => ({\r\n        backgroundColor: props.line.color,\r\n        width: `${props.line.width}%`,\r\n        height: '100%',\r\n        display: 'inline-block',\r\n        \"&:first-child\": {\r\n            borderRadius: '0.3rem 0 0 0.3rem'\r\n        },\r\n        \"&:last-child\": {\r\n            minWidth: '3px',\r\n            borderRadius: '0 0.3rem 0.3rem 0'\r\n        }\r\n\r\n    })\r\n});\r\n\r\nexport default function Line(props) {\r\n    const styles = useStyles(props);\r\n    return <span className={styles.root}></span>\r\n}","import { makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Line from './Line';\r\n\r\nexport default function LineProgress({className, timeline}) {\r\n    return (\r\n        <div className={className}>\r\n            {timeline.map((line, idx) => <Line key={idx} line={line}></Line>)}\r\n        </div>\r\n    )\r\n}","import { Box, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport LineProgress from './dataDisplay/LineProgress'\r\n\r\nconst useStyles = makeStyles({\r\n    progress: {\r\n        height: \"1.5rem\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: '0.3rem'\r\n    }\r\n});\r\n\r\nexport default function MyWorkBox() {\r\n    const styles = useStyles();\r\n    const workingHours = useSelector(state => state.workingHours);\r\n\r\n    return (\r\n        <Box>\r\n            <LineProgress className={styles.progress} timeline={workingHours.timeline}></LineProgress>\r\n        </Box>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport MemberList from '../component/MemberList';\r\nimport MyInfoBox from '../component/MyInfoBox';\r\nimport socketManager from '../socket/socketManager';\r\nimport rtc from '../rtc/rtc';\r\nimport { makeStyles, Container, Grid, Typography } from '@material-ui/core';\r\nimport MyWorkBox from '../component/MyWorkBox';\r\n\r\nconst useStyles = makeStyles({\r\n    mainBox: {\r\n        backgroundColor: \"#F1F3F6\",\r\n        padding: \"10px 20px\"\r\n    }\r\n})\r\n\r\nexport default function Main() {\r\n    const styles = useStyles();\r\n    const { teamId, userName } = useParams();\r\n\r\n    useEffect(() => {\r\n        socketManager.onMessageReceived(receiveDataMessage);\r\n\r\n        return () => {\r\n            socketManager.offMessageReceived();\r\n        }\r\n    });\r\n\r\n    function offerToMember(user) {\r\n        rtc.createOffer(user.id)\r\n            .then(({ pc, sessionDescription }) => {\r\n                pc.onicecandidate = (event) => { handleIceCandidate(user.id, event) };\r\n                pc.onaddstream = (event) => { handleRemoteStreamAdded(user.id, event); };\r\n                pc.onremovestream = handleRemoteStreamRemoved;\r\n                socketManager.sendMessageToUser('offer', user.id, sessionDescription);\r\n            });\r\n    }\r\n\r\n    function receiveDataMessage(data) {\r\n        switch (data.type) {\r\n            case 'offer':\r\n                rtc.receiveOffer(data.id, data.message)\r\n                    .then(pc => {\r\n                        pc.onicecandidate = (event) => { handleIceCandidate(data.id, event) };\r\n                        pc.onaddstream = (event) => { handleRemoteStreamAdded(data.id, event); };\r\n                        pc.onremovestream = handleRemoteStreamRemoved;\r\n                        rtc.createAnswer(data.id).then(sessionDescription => {\r\n                            socketManager.sendMessageToUser('answer', data.id, sessionDescription);\r\n                        })\r\n                    })\r\n                break;\r\n            case 'answer':\r\n                rtc.receiveAnswer(data.id, data.message);\r\n                break;\r\n            case 'candidate':\r\n                console.log('candidate');\r\n                console.log(data);\r\n                rtc.addIceCandidate(data.id, data.message);\r\n                break;\r\n            default:\r\n                console.log(data);\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleIceCandidate(id, event) {\r\n        if (event.candidate) {\r\n            socketManager.sendMessageToUser('candidate', id, event.candidate);\r\n        }\r\n    }\r\n\r\n    function handleRemoteStreamAdded(id, event) {\r\n        console.log(id, event);\r\n        // const member = [...memberList].find(member => member.id === id);\r\n        // if (member) {\r\n        //     member.stream = event.stream;\r\n        //     updateMember(member);\r\n        // }\r\n    }\r\n\r\n    function handleRemoteStreamRemoved(event) {\r\n        console.log(event);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Grid container spacing={3} className={styles.mainBox}>\r\n                <Grid item xs={12} md={12}>\r\n                    <Typography>TeleTele</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <MyInfoBox\r\n                        userName={userName}\r\n                        teamId={teamId}\r\n                    ></MyInfoBox>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <MyWorkBox\r\n\r\n                    >\r\n                    </MyWorkBox>\r\n                </Grid>\r\n            </Grid>\r\n            <MemberList className={styles.mainBox}\r\n                offerToMember={offerToMember}\r\n            ></MemberList>\r\n        </Container>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Button, Box, makeStyles, TextField } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles({\r\n    home: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    title: {\r\n        height: '3rem',\r\n        fontSize: '2rem'\r\n    },\r\n    startButton: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        color: '#fff',\r\n        width: '200px',\r\n        height: '50px',\r\n        borderRadius: '30px',\r\n        fontSize: '1.2rem'\r\n    },\r\n    joinButton: {\r\n        fontSize: '1.2rem'\r\n    }\r\n})\r\n\r\nexport default function Home() {\r\n    const styles = useStyles();\r\n    const history = useHistory();\r\n    const [started, setStarted] = useState(false);\r\n    const [teamId, setTeamId] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const myInfo = useSelector(state => state.myInfo);\r\n\r\n    useEffect(() => {\r\n        if (myInfo.id) {\r\n            setTeamId(myInfo.team);\r\n            setUserName(myInfo.name);\r\n        }\r\n    }, []);\r\n\r\n    function handleChange(e) {\r\n        setTeamId(e.target.value);\r\n    }\r\n    \r\n    function handleChangeMyName(e) {\r\n        setUserName(e.target.value);\r\n    }\r\n    function handleEnterKey(e) {\r\n        if (e.key === 'Enter') {\r\n            if (!started && teamId.trim().length <= 0) {\r\n                return;\r\n            } else if (started && userName.trim().length <= 0) {\r\n                return;\r\n            }\r\n\r\n            started ? setStarted(true) : joinTheTeam();\r\n        }\r\n    }\r\n    function joinTheTeam() {\r\n        if (!started && teamId.trim().length <= 0) {\r\n            return;\r\n        }\r\n        setStarted(true);\r\n    }\r\n    function handleClick() {\r\n        if (started && userName.trim().length <= 0) {\r\n            return;\r\n        }\r\n        history.push(`/team/${teamId}/${userName}`);\r\n    }\r\n\r\n    return (\r\n        <Box className={styles.home}>\r\n            <h2 className={styles.title}>TeleTele</h2>\r\n            <h3>\r\n                {!started && <>\r\n                    <TextField\r\n                        label=\"TEAM\"\r\n                        className={styles.joinTextField}\r\n                        onChange={handleChange}\r\n                        onKeyPress={handleEnterKey}\r\n                        value={teamId}\r\n                        required\r\n                    />\r\n                    <br/><br/>\r\n                    <Button\r\n                        className={styles.startButton}\r\n                        onClick={joinTheTeam}\r\n                    >JOIN\r\n                    </Button>\r\n                </>}\r\n                {started && <>\r\n                    <TextField\r\n                        label=\"MY NAME\"\r\n                        className={styles.joinTextField}\r\n                        onChange={handleChangeMyName}\r\n                        onKeyPress={handleEnterKey}\r\n                        value={userName}\r\n                        required\r\n                    />\r\n                    <br/><br/>\r\n                    <Button\r\n                        className={styles.startButton}\r\n                        onClick={handleClick}>START\r\n                    </Button>\r\n                </>}\r\n            </h3>\r\n        </Box >\r\n    )\r\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Main from './route/Main';\nimport Home from './route/Home';\n\nfunction App() {\n  return (\n    <Router basename=\"/our-telepathy\">\n      <Switch>\n        <Route path=\"/team/:teamId/:userName\">\n          <Main />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport myInfo from \"./myInfo/myInfo.reducer\";\r\nimport workingHours from \"./workingHours/workingHours.reducer\";\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n    whitelist: [\"myInfo\", \"workingHours\"]\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    myInfo,\r\n    workingHours\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './store';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst enhancedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(enhancedReducer);\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}