{"version":3,"sources":["socket/socketManager.js","component/inviteDialog/InviteDialog.js","component/EmptyMember.js","dto/statusList.js","component/callDialog/CallDialog.js","component/Member.js","component/MemberList.js","store/myInfo/myInfo.reducer.js","store/workingHours/workingHours.reducer.js","utils/utils.js","component/MyInfoBox.js","customHook/useInterval.js","rtc/rtc.js","component/dataDisplay/Line.js","component/dataDisplay/LineProgress.js","component/MyWorkBox.js","route/Main.js","route/Home.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["this","socket","io","myInfo","member","emit","addMember","removeMember","on","userInfo","id","userList","forEach","off","onChangeStatus","error","console","receiveDataMessage","type","targetId","message","messageObject","useStyles","makeStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","linkText","width","dialogContent","display","flexDirection","justifyContent","height","InviteDialog","props","styles","inviteLink","window","location","href","slice","lastIndexOf","useState","title","link","userName","setUserName","onClose","open","Dialog","fullWidth","maxWidth","aria-labelledby","DialogTitle","className","dialogTitle","Typography","IconButton","onClick","DialogContent","TextField","label","onChange","e","target","value","required","aria-readonly","variant","onFocus","select","emptyContent","alignItems","plusIcon","EmptyMember","classes","setOpen","Grid","item","xs","md","Card","CardContent","Add","StatusDTO","statusInfo","status","buttonColor","lineColor","list","find","orange","getContrastText","deepOrange","backgroundColor","micOnIcon","endCallIcon","border","memberName","marginLeft","CallDialog","setTitle","micOn","setMicOn","Avatar","name","Mic","MicOff","DialogActions","setTimeout","CallEnd","cardHeader","cardContent","cardStatusChip","alignSelf","cardAction","Member","setLabel","selectColor","setSelectColor","useEffect","statusList","getStatus","changeStatus","elevation","CardHeader","action","Chip","CardActions","Button","memberBox","padding","marginTop","MemberList","offerToMember","memberList","setMemberList","filter","foundMember","mem","newMember","index","findIndex","newMemberList","updateMember","socketManager","onJoin","offJoin","offChangeStatus","container","map","SET_MY_INFO","CHANGE_STATUS","initialState","team","ADD","CHANGE_TIMELINE","CLEAR","CHANGE_TOTAL_TIME","workDate","Date","toISOString","startDate","endDate","currentStatus","currentIndex","totalTime","timeline","calcDateWidth","toFixed","getNewId","Math","round","random","workingStatusButton","restStatusButton","offStatusButton","MyInfoBox","teamId","useSelector","state","workingHours","dispatch","useDispatch","setTimeline","addTimeline","getFullDate","date","getFullYear","toString","getMonth","getDate","updateMyStatus","setMyInfo","utils","join","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","lastDate","avatar","pcList","stream","pcInfo","url","credential","username","getUserMedia","a","navigator","mediaDevices","audio","peerConnection","Promise","res","rej","then","myStream","pc","RTCPeerConnection","addStream","oniceconnectionstatechange","event","log","connectionState","handleOnIceConnectionStateChange","handleError","createOffer","sessionDescription","setLocalDescription","catch","createAnswer","receiveOffer","offer","setRemoteDescription","RTCSessionDescription","receiveAnswer","answer","addIceCandidate","candidate","root","line","borderRadius","minWidth","boxShadow","useStylesTooltip","tooltip","Line","startTime","getHours","getMinutes","lastTime","Tooltip","LineProgress","idx","progress","workingInputHoursBox","marginBottom","MyWorkBox","setStartTime","endTime","setEndTime","setHours","split","Box","defaultValue","inputProps","step","mainBox","Main","useParams","data","rtc","onicecandidate","handleIceCandidate","onaddstream","handleRemoteStreamAdded","onremovestream","handleRemoteStreamRemoved","sendMessageToUser","onMessageReceived","offMessageReceived","Container","user","home","fontSize","startButton","background","joinButton","Home","history","useHistory","started","setStarted","setTeamId","handleEnterKey","key","trim","length","joinTheTeam","joinTextField","onKeyPress","push","App","basename","path","Boolean","hostname","match","persistConfig","storage","whitelist","rootReducer","combineReducers","stateDate","persistReducer","enhancedReducer","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.339443d8.chunk.js","sourcesContent":["import { io } from 'socket.io-client';\r\n\r\nclass SocketManager {\r\n    constructor() {\r\n        this.socket = io(\"https://flawless-psyche-307902.du.r.appspot.com\");\r\n        // this.socket = io(\"https://localhost:8080\");\r\n        this.myInfo = null;\r\n    }\r\n\r\n    join(member) {\r\n        this.myInfo = member;\r\n        this.socket.emit(\"join\", member);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Function} addMember \r\n     * @param {Function} removeMember \r\n     */\r\n    onJoin(addMember, removeMember) {\r\n        this.socket.on('myInfo', userInfo => {\r\n            this.myInfo.id = userInfo.id;\r\n        })\r\n\r\n        this.socket.on('userList', userList => {\r\n            userList.forEach(userInfo => {\r\n                addMember(userInfo);\r\n            })\r\n        })\r\n\r\n        this.socket.on(\"joinedUser\", member => {\r\n            addMember(member);\r\n        });\r\n\r\n        this.socket.on(\"leavedUser\", id => {\r\n            removeMember(id);\r\n        });\r\n    }\r\n\r\n    offJoin() {\r\n        this.socket.off('myInfo');\r\n        this.socket.off('userList');\r\n        this.socket.off('joinedUser');\r\n        this.socket.off('leavedUser');\r\n    }\r\n\r\n    getMyInfo() {\r\n        return this.myInfo;\r\n    }\r\n\r\n    changeStatus(member) {\r\n        this.socket.emit('changeStatus', member);\r\n    }\r\n    \r\n\r\n    onChangeStatus(onChangeStatus) {\r\n        this.socket.on('onChangeStatus', onChangeStatus);\r\n    }\r\n\r\n    offChangeStatus() {\r\n        this.socket.off('onChangeStatus');\r\n    }\r\n\r\n    onError(error) {\r\n        console.error(error);\r\n    }\r\n\r\n    onMessageReceived(receiveDataMessage) {\r\n        this.socket.on('receivePrivateMessage', receiveDataMessage);\r\n    }\r\n\r\n    offMessageReceived() {\r\n        this.socket.off('receivePrivateMessage')\r\n    }\r\n\r\n    sendMessageToUser(type, targetId, message) {\r\n        const messageObject = {\r\n            id: this.myInfo.id, // sender id\r\n            type: type,\r\n            message: message\r\n        };\r\n        this.socket.emit('privateMessage', targetId, messageObject);\r\n    }\r\n}\r\n\r\nexport default new SocketManager();","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Dialog, DialogContent, DialogTitle, IconButton, TextField, Typography } from '@material-ui/core';\r\nimport Close from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500]\r\n    },\r\n    linkText: {\r\n        width: '100%'\r\n    },\r\n    dialogContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        height: '150px'\r\n    }\r\n}));\r\n\r\nexport default function InviteDialog(props) {\r\n    const styles = useStyles();\r\n    const inviteLink = window.location.href.slice(0, window.location.href.lastIndexOf('/') + 1);\r\n    const [title, setTitle] = useState('멤버 초대');\r\n    const [link, setLink] = useState(inviteLink);\r\n    const [userName, setUserName] = useState('');\r\n    const { onClose, open } = props;\r\n\r\n    function handleChangeInviteUserName(e) {\r\n        setUserName(e.target.value)\r\n    }\r\n\r\n    function handleFocus(e) {\r\n        e.target.select();\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={onClose} fullWidth={true} maxWidth={\"sm\"} aria-labelledby=\"dialog-title\" open={open}>\r\n            <DialogTitle id=\"dialog-title\" className={styles.dialogTitle}>\r\n                <Typography>{title}</Typography>\r\n                <IconButton onClick={onClose} className={styles.closeButton}>\r\n                    <Close />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className={styles.dialogContent}>\r\n                <TextField\r\n                    label=\"초대할 사용자 이름\"\r\n                    onChange={handleChangeInviteUserName}\r\n                    value={userName}\r\n                    required\r\n                />\r\n                <TextField\r\n                    label=\"초대 링크\"\r\n                    className={styles.linkText}\r\n                    aria-readonly={true}\r\n                    value={link + userName}\r\n                    variant=\"outlined\"\r\n                    onFocus={handleFocus}\r\n                ></TextField>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nInviteDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired\r\n}","import { Card, CardContent, Grid, IconButton, makeStyles } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport InviteDialog from './inviteDialog/InviteDialog'\r\n\r\nconst useStyles = makeStyles({\r\n    emptyContent: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '140px'\r\n    },\r\n    plusIcon: {\r\n        width: '80px',\r\n        height: '80px',\r\n    }\r\n})\r\n\r\nexport default function EmptyMember() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    function handleOpenInviteDialog() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={6} md={3}>\r\n            <Card variant=\"outlined\">\r\n                <CardContent className={classes.emptyContent}>\r\n                    <IconButton className={classes.plusIcon} onClick={handleOpenInviteDialog}>\r\n                        <Add />\r\n                    </IconButton>\r\n                </CardContent>\r\n            </Card>\r\n            <InviteDialog open={open} onClose={handleClose}></InviteDialog>\r\n        </Grid>\r\n    )\r\n}","class StatusDTO {\r\n    constructor(statusInfo) {\r\n        this.status = statusInfo.status;\r\n        this.buttonColor = statusInfo.buttonColor;\r\n        this.lineColor = statusInfo.lineColor;\r\n        this.label = statusInfo.label;\r\n    }\r\n}\r\n\r\nclass StatusDTOList {\r\n    constructor() {\r\n        this.list = [\r\n            new StatusDTO({\r\n                status: 'working',\r\n                buttonColor: 'primary',\r\n                lineColor: '#C6BDFB',\r\n                label: '업무중'\r\n            }),\r\n            new StatusDTO({\r\n                status: 'meeting',\r\n                buttonColor: 'primary',\r\n                lineColor: '#86B7E5',\r\n                label: '회의중'\r\n            }),\r\n            new StatusDTO({\r\n                status: 'meal',\r\n                buttonColor: 'secondary',\r\n                lineColor: '#75CD83',\r\n                label: '식사중'\r\n            }),\r\n            new StatusDTO({\r\n                status: 'rest',\r\n                buttonColor: 'secondary',\r\n                lineColor: '#FFCBC0',\r\n                label: '휴식중'\r\n            }),\r\n            new StatusDTO({\r\n                status: 'offwork',\r\n                buttonColor: 'default',\r\n                lineColor: '#8F95A4',\r\n                label: '퇴근'\r\n            })\r\n        ]\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {String} status \r\n     * @returns {StatusDTO}\r\n     */\r\n    getStatus(status) {\r\n        const statusInfo = this.list.find(item => item.status === status);\r\n        return statusInfo ? statusInfo : new StatusDTO({\r\n            status: 'default',\r\n            buttonColor: 'default',\r\n            lineColor: '#eee',\r\n            label: '준비중'\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default new StatusDTOList();","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport { Avatar, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { CallEnd, Mic, MicOff } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    orange: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500]\r\n    },\r\n    micOnIcon: {\r\n        color: '#A30014'\r\n    },\r\n    endCallIcon: {\r\n        border: '1px solid gray',\r\n    },\r\n    dialogContent: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    memberName: {\r\n        marginLeft: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport default function CallDialog(props) {\r\n    const styles = useStyles();\r\n    const [title, setTitle] = useState('연결중');\r\n    const [micOn, setMicOn] = useState(false);\r\n    const { member, onClose, open } = props;\r\n\r\n    function handleMicOn() {\r\n        setMicOn(!micOn);\r\n    }\r\n\r\n    function handleEndCall() {\r\n        setTitle('통화 종료');\r\n        setTimeout(() => {\r\n            onClose();\r\n        }, 3000);\r\n    }\r\n\r\n    return (\r\n        <Dialog fullWidth={true} maxWidth={\"xs\"} aria-labelledby=\"dialog-title\" open={open}>\r\n            <DialogTitle id=\"dialog-title\" className={styles.dialogTitle}>\r\n                <Typography>{title}</Typography>\r\n                <IconButton onClick={onClose} className={styles.closeButton}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className={styles.dialogContent}>\r\n                <Avatar className={styles.orange}>응</Avatar>\r\n                <Typography className={styles.memberName}>\r\n                    {member.name}\r\n                </Typography>\r\n                <IconButton onClick={handleMicOn} className={styles.micOnIcon}>\r\n                    {micOn ? <Mic /> : <MicOff />}\r\n                </IconButton>\r\n            </DialogContent>\r\n            <DialogActions className={styles.dialogContent}>\r\n                <IconButton onClick={handleEndCall} color=\"secondary\">\r\n                    <CallEnd />\r\n                </IconButton>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nCallDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    member: PropTypes.any.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, Chip, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport statusList from '../dto/statusList'\r\nimport CallDialog from './callDialog/CallDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    orange: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    cardHeader: {\r\n        alignItems: \"center\"\r\n    },\r\n    cardContent: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    cardStatusChip: {\r\n        alignSelf: \"center\"\r\n    },\r\n    cardAction: {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nexport default function Member({member}) {\r\n    const styles = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [label, setLabel] = useState('');\r\n    const [selectColor, setSelectColor] = useState('primary');\r\n\r\n    useEffect(() => {\r\n        changeStatus(member.status);\r\n    });\r\n\r\n    function changeStatus (status) {\r\n        const statusInfo = statusList.getStatus(status);\r\n        setLabel(statusInfo.label);\r\n        setSelectColor(statusInfo.buttonColor);\r\n    }\r\n\r\n    function handleClickCallDialogOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return <Grid item xs={6} md={3}>\r\n        <Card elevation={4}>\r\n            <CardHeader\r\n                className={styles.cardHeader}\r\n                action={<Chip className={styles.cardStatusChip} color={selectColor} label={label} />}\r\n            >\r\n            </CardHeader>\r\n            <CardContent className={styles.cardContent}>\r\n                <Avatar className={styles.orange}>O</Avatar>\r\n                <Typography>{member.name}</Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={styles.cardAction}\r\n                    onClick={handleClickCallDialogOpen}\r\n                >\r\n                    Call\r\n                </Button>\r\n            </CardActions>\r\n            <CallDialog member={member} open={open} onClose={handleClose}></CallDialog>\r\n        </Card>\r\n    </Grid>\r\n}\r\n\r\nMember.propTypes = {\r\n    member: PropTypes.any.isRequired\r\n}","import { Grid, makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport socketManager from '../socket/socketManager';\r\nimport EmptyMember from './EmptyMember';\r\nimport Member from './Member';\r\n\r\nconst useStyles = makeStyles({\r\n    memberBox: {\r\n        padding: \"10px 40px\",\r\n        marginTop: \"20px\"\r\n    }\r\n})\r\n\r\nexport default function MemberList({ offerToMember }) {\r\n    const [memberList, setMemberList] = useState([]);\r\n    const styles = useStyles();\r\n\r\n    useEffect(() => {\r\n        socketManager.onJoin(addMember, removeMember);\r\n\r\n        return () => {\r\n            socketManager.offJoin();\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        socketManager.onChangeStatus(onChangeStatus);\r\n\r\n        return () => {\r\n            socketManager.offChangeStatus();\r\n        }\r\n    });\r\n\r\n    function addMember(member) {\r\n        setMemberList(memberList => [...memberList, member]);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} id \r\n     */\r\n    function removeMember(id) {\r\n        setMemberList(memberList => memberList.filter(member => {\r\n            return member.id !== id;\r\n        }));\r\n    }\r\n\r\n    function updateMember(newMember) {\r\n        const index = [...memberList].findIndex(member => {\r\n            return member.id === newMember.id\r\n        });\r\n        let newMemberList = [...memberList];\r\n        newMemberList[index] = newMember;\r\n        setMemberList(() => newMemberList);\r\n    }\r\n\r\n    function onChangeStatus(member) {\r\n        const foundMember = [...memberList].find(mem => mem.id === member.id);\r\n        if (foundMember) {\r\n            foundMember.status = member.status;\r\n            updateMember(foundMember);\r\n        }\r\n    }\r\n\r\n    return <Grid container spacing={3} className={styles.memberBox}>\r\n        {memberList.map(member => <Member key={member.id} member={member}></Member>)}\r\n        <EmptyMember></EmptyMember>\r\n    </Grid>\r\n}","import { createStore } from \"redux\";\r\n\r\nconst SET_MY_INFO = '/myInfo/SET_MY_INFO';\r\nconst CHANGE_STATUS = '/myInfo/CHANGE_STATUS';\r\n\r\nexport const setMyInfo = myInfo => ({type: SET_MY_INFO, ...myInfo});\r\nexport const changeStatus = myInfo => ({type: CHANGE_STATUS, ...myInfo});\r\n\r\nconst initialState = {\r\n    id: '',\r\n    name: '',\r\n    team: '',\r\n    status: ''\r\n}\r\n\r\n\r\nexport default function myInfo(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_MY_INFO:\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n                name: action.name,\r\n                team: action.team,\r\n                status: action.status\r\n            }\r\n        case CHANGE_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}","const ADD = '/timeline/ADD';\r\nconst CHANGE_TIMELINE = '/timeline/CHANGE_TIMELINE';\r\nconst CLEAR = '/timeline/CLEAR';\r\nconst CHANGE_TOTAL_TIME = '/timeline/CHANGE_WORKING_HOURS';\r\n\r\nexport const addTimeline = workingHours => ({ type: ADD, ...workingHours });\r\nexport const changeTimeline = timeline => ({ type: CHANGE_TIMELINE, ...timeline });\r\nexport const clear = () => ({ type: CLEAR });\r\nexport const changeTotalTime = workingHours => ({ type: CHANGE_TOTAL_TIME, ...workingHours });\r\n\r\nconst initialState = {\r\n    workDate: new Date().toISOString(),\r\n    startDate: null,\r\n    endDate: null,\r\n    currentStatus: '',\r\n    currentIndex: -1,\r\n    totalTime: 60 * 60 * 1000,\r\n    timeline: []\r\n}\r\n\r\nexport default function workingHours(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD:\r\n            return {\r\n                ...state,\r\n                currentIndex: state.currentIndex + 1,\r\n                currentStatus: action.status,\r\n                timeline: [\r\n                    ...state.timeline,\r\n                    {\r\n                        ...action.timeline,\r\n                        index: state.currentIndex + 1\r\n                    }\r\n                ]\r\n            }\r\n        case CHANGE_TIMELINE:\r\n            return {\r\n                ...state,\r\n                timeline: state.timeline.map(item => {\r\n                    if (item.index == action.index) {\r\n                        return {\r\n                            ...item,\r\n                            width: calcDateWidth(item.startDate, action.lastDate, state.totalTime),\r\n                            lastDate: action.lastDate\r\n                        };\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        case CHANGE_TOTAL_TIME:\r\n            return {\r\n                ...state,\r\n                totalTime: action.totalTime,\r\n                stateDate: action.startDate ? action.stateDate : state.startDate,\r\n                endDate: action.endDate ? action.endDate : state.endDate,\r\n                timeline: state.timeline.map(item => {\r\n                    return {\r\n                        ...item,\r\n                        width: calcDateWidth(item.startDate, item.lastDate, action.totalTime)\r\n                    }\r\n                })\r\n            }\r\n        case CLEAR:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction calcDateWidth(startDate, endDate, totalTime) {\r\n    return ((new Date(endDate) - new Date(startDate)) / totalTime * 100).toFixed(2);\r\n}","function getNewId() {\r\n    return Math.round(Math.random() * 99999999);\r\n}\r\n\r\nexport default {\r\n    getNewId\r\n}","import { Avatar, Button, Card, CardContent, CardHeader, Chip, Grid, makeStyles } from '@material-ui/core';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport socketManager from '../socket/socketManager';\r\nimport { changeStatus, setMyInfo } from '../store/myInfo/myInfo.reducer'\r\nimport { addTimeline, changeTimeline, clear } from '../store/workingHours/workingHours.reducer';\r\nimport utils from '../utils/utils';\r\nimport statusList from '../dto/statusList';\r\nimport useInterval from '../customHook/useInterval';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    orange: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    cardHeader: {\r\n        alignItems: \"center\"\r\n    },\r\n    cardContent: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    cardStatusChip: {\r\n        alignSelf: \"center\"\r\n    },\r\n    workingStatusButton: {\r\n        color: '#5843BE'\r\n    },\r\n    restStatusButton: {\r\n        color: '#FFA067'\r\n    },\r\n    offStatusButton: {\r\n        color: '#282828'\r\n    }\r\n}));\r\n\r\nexport default function MyInfoBox({ teamId, userName }) {\r\n    const styles = useStyles();\r\n    const [label, setLabel] = useState('');\r\n    const [selectColor, setSelectColor] = useState('primary');\r\n    const myInfo = useSelector(state => state.myInfo);\r\n    const workingHours = useSelector(state => state.workingHours);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setMyInfo({\r\n            id: myInfo.id ? myInfo.id : utils.getNewId(),\r\n            name: userName,\r\n            team: teamId,\r\n            status: myInfo.status ? myInfo.status : 'working'\r\n        }))\r\n\r\n        socketManager.join(myInfo);\r\n        updateMyStatus(myInfo.status);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socketManager.changeStatus(myInfo);\r\n    }, [myInfo])\r\n\r\n    useEffect(() => {\r\n        if (getFullDate(new Date(workingHours.workDate)) !== getFullDate(new Date)) {\r\n            dispatch(clear());\r\n        }\r\n    }, [])\r\n\r\n    useInterval(() => {\r\n        dispatch(changeTimeline({\r\n            index: workingHours.currentIndex,\r\n            lastDate: new Date().toISOString()\r\n        }))\r\n    }, 1000)\r\n\r\n    function setTimeline(status) {\r\n        dispatch(addTimeline({\r\n            status: status,\r\n            timeline: {\r\n                status: status,\r\n                color: statusList.getStatus(status).lineColor,\r\n                startDate: new Date().toISOString()\r\n            }\r\n        }))\r\n    }\r\n\r\n    function getFullDate(date) {\r\n        return date.getFullYear().toString() + (date.getMonth() + 1).toString() + date.getDate().toString();\r\n    }\r\n\r\n    function updateMyStatus(status) {\r\n        dispatch(changeStatus({ status: status }));\r\n        setTimeline(status);\r\n        const statusInfo = statusList.getStatus(status);\r\n        setLabel(statusInfo.label);\r\n        setSelectColor(statusInfo.buttonColor);\r\n    }\r\n\r\n    return (\r\n        <Card elevation={0}>\r\n            <CardHeader\r\n                className={styles.cardHeader}\r\n                avatar={<Avatar className={styles.orange}>응</Avatar>}\r\n                title={myInfo.name}\r\n                action={<Chip className={styles.cardStatusChip} color={selectColor} label={label} />}\r\n            >\r\n            </CardHeader>\r\n            <CardContent className={styles.cardContent}>\r\n                {(statusList.list.map((item, index) => (\r\n                        <Grid key={index} item xs=\"auto\">\r\n                            <Button\r\n                                variant={myInfo.status === item.status ? \"contained\" : \"text\"}\r\n                                color={selectColor}\r\n                                onClick={() => { updateMyStatus(item.status) }}\r\n                            >{item.label}</Button>\r\n                        </Grid>\r\n                    )\r\n                ))}\r\n            </CardContent>\r\n\r\n        </Card>\r\n    )\r\n}","import { useEffect, useRef } from \"react\";\r\n\r\nexport default function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    // Remember the latest function.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}","const state = {\r\n    pcList: {},\r\n    stream: null\r\n}\r\n\r\nconst pcInfo = {\r\n    'iceServers': [\r\n        { url: 'stun:34.64.112.126:3478' },\r\n        {\r\n            url: 'turn:34.64.112.126:3478?transport=udp',\r\n            credential: 'dmdcjfdl',\r\n            username: 'ekim'\r\n        }],\r\n    'DtlsSrtpKeyAgreement': true\r\n\r\n};\r\n\r\nasync function getUserMedia() {\r\n    if (state.stream) {\r\n        return state.stream;\r\n    }\r\n    state.stream = await navigator.mediaDevices.getUserMedia({ audio: true })\r\n    return state.stream;\r\n}\r\n\r\nfunction peerConnection(id) {\r\n    return new Promise((res, rej) => {\r\n        getUserMedia().then(stream => {\r\n            window.myStream = stream;\r\n            try {\r\n                const pc = new RTCPeerConnection(pcInfo);\r\n                pc.addStream(stream);\r\n                pc.oniceconnectionstatechange = (event) => { handleOnIceConnectionStateChange(id, event); };\r\n                state.pcList[id] = pc;\r\n                res(pc);\r\n            } catch (e) {\r\n                console.error(e);\r\n                rej(e)\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nfunction createOffer(id) {\r\n    console.log('createOffer: ' + id);\r\n    return new Promise((res, rej) => {\r\n        peerConnection(id)\r\n            .then(pc => {\r\n                state.pcList[id].createOffer(sessionDescription => {\r\n                    state.pcList[id].setLocalDescription(sessionDescription);\r\n                    res({ pc, sessionDescription });\r\n                }, handleError)\r\n            })\r\n            .catch(e => {\r\n                rej(e);\r\n            })\r\n    })\r\n}\r\n\r\nfunction receiveOffer(id, offer) {\r\n    console.log('receiveOffer: ' + id);\r\n    if (!state.pcList[id]) {\r\n        return new Promise(res => {\r\n            peerConnection(id)\r\n                .then(pc => {\r\n                    pc.setRemoteDescription(new RTCSessionDescription(offer));\r\n                    res(pc);\r\n                });\r\n        })\r\n    }\r\n}\r\n\r\nfunction createAnswer(id) {\r\n    return new Promise(res => {\r\n        if (state.pcList[id].connectionState !== \"connected\") {\r\n            state.pcList[id].createAnswer(sessionDescription => {\r\n                state.pcList[id].setLocalDescription(sessionDescription);\r\n                res(sessionDescription);\r\n            }, handleError);\r\n        }\r\n    })\r\n}\r\n\r\nfunction receiveAnswer(id, answer) {\r\n    state.pcList[id].setRemoteDescription(new RTCSessionDescription(answer));\r\n}\r\n\r\nfunction addIceCandidate(id, candidate) {\r\n    if (state.pcList[id])\r\n        state.pcList[id].addIceCandidate(candidate);\r\n}\r\n\r\nfunction handleOnIceConnectionStateChange(id, event) {\r\n    console.log(id, event);\r\n    console.log(state.pcList[id].connectionState)\r\n    if (state.pcList[id].connectionState === \"connected\") {\r\n        console.log('connected');\r\n    }\r\n}\r\n\r\nfunction handleError(error) {\r\n    console.error(error);\r\n}\r\n\r\n\r\nexport default {\r\n    getUserMedia,\r\n    createOffer,\r\n    createAnswer,\r\n    receiveOffer,\r\n    receiveAnswer,\r\n    addIceCandidate,\r\n}","import { makeStyles, Tooltip } from '@material-ui/core';\r\nimport React from 'react';\r\nimport statusList from '../../dto/statusList'\r\n\r\nconst useStyles = makeStyles({\r\n    root: (props) => ({\r\n        backgroundColor: props.line.color,\r\n        width: `${props.line.width}%`,\r\n        height: '100%',\r\n        display: 'inline-block',\r\n        \"&:first-child\": {\r\n            borderRadius: '0.3rem 0 0 0.3rem'\r\n        },\r\n        \"&:last-child\": {\r\n            minWidth: '3px',\r\n            borderRadius: '0 0.3rem 0.3rem 0'\r\n        },\r\n        \"&:hover\": {\r\n            boxShadow: `0 0 2px 2px ${props.line.color}88`\r\n        }\r\n\r\n    })\r\n});\r\n\r\nconst useStylesTooltip = makeStyles({\r\n    tooltip: (props) => ({\r\n        backgroundColor: props.line.color\r\n    })\r\n})\r\n\r\nexport default function Line(props) {\r\n    const styles = useStyles(props);\r\n    const classes = useStylesTooltip(props);\r\n    const label = statusList.getStatus(props.line.status).label;\r\n    const startDate = new Date(props.line.startDate);\r\n    const startTime = startDate.getHours() + \":\" + startDate.getMinutes();\r\n    const lastDate = new Date(props.line.lastDate);\r\n    const lastTime = lastDate.getHours() + \":\" + lastDate.getMinutes();\r\n    return <Tooltip title={label + ' (' + startTime + ' ~ ' + lastTime + ')'} classes={classes}><span className={styles.root}></span></Tooltip>\r\n}","import { makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Line from './Line';\r\n\r\nexport default function LineProgress({className, timeline}) {\r\n    return (\r\n        <div className={className}>\r\n            {timeline.map((line, idx) => <Line key={idx} line={line}></Line>)}\r\n        </div>\r\n    )\r\n}","import { Box, makeStyles, TextField } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport LineProgress from './dataDisplay/LineProgress'\r\n\r\nconst useStyles = makeStyles({\r\n    progress: {\r\n        height: \"1.5rem\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: '0.3rem'\r\n    },\r\n    workingInputHoursBox: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        marginBottom: '5px'\r\n    }\r\n});\r\n\r\nexport default function MyWorkBox() {\r\n    const styles = useStyles();\r\n    const [startTime, setStartTime] = useState(\"09:00\");\r\n    const [endTime, setEndTime] = useState(\"18:00\");\r\n    const workingHours = useSelector(state => state.workingHours);\r\n\r\n    function handleStartTime(e) {\r\n        setStartTime(e.target.value);\r\n    }\r\n\r\n    function handleEndTime(e) {\r\n        setEndTime(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const startDate = new Date();\r\n        const endDate = new Date();\r\n        startDate.setHours(startTime.split(':')[0], startTime.split(':')[1]);\r\n        endDate.setHours(endTime.split(':')[0], endTime.split(':')[1]);\r\n    }, [startTime, endTime])\r\n\r\n    return (\r\n        <Box>\r\n            <Box className={styles.workingInputHoursBox}>\r\n                <TextField\r\n                    id=\"startTime\"\r\n                    label=\"출근\"\r\n                    type=\"time\"\r\n                    defaultValue=\"09:00\"\r\n                    inputProps={{\r\n                        step: 60,\r\n                    }}\r\n                    onChange={handleStartTime}\r\n                />\r\n                <TextField\r\n                    id=\"endTime\"\r\n                    label=\"퇴근\"\r\n                    type=\"time\"\r\n                    defaultValue=\"18:00\"\r\n                    inputProps={{\r\n                        step: 60\r\n                    }}\r\n                    onChange={handleEndTime}\r\n                />\r\n            </Box>\r\n            <LineProgress className={styles.progress} timeline={workingHours.timeline}></LineProgress>\r\n        </Box>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport MemberList from '../component/MemberList';\r\nimport MyInfoBox from '../component/MyInfoBox';\r\nimport socketManager from '../socket/socketManager';\r\nimport rtc from '../rtc/rtc';\r\nimport { makeStyles, Container, Grid, Typography } from '@material-ui/core';\r\nimport MyWorkBox from '../component/MyWorkBox';\r\n\r\nconst useStyles = makeStyles({\r\n    mainBox: {\r\n        backgroundColor: \"#F1F3F6\",\r\n        padding: \"10px 20px\"\r\n    }\r\n})\r\n\r\nexport default function Main() {\r\n    const styles = useStyles();\r\n    const { teamId, userName } = useParams();\r\n\r\n    useEffect(() => {\r\n        socketManager.onMessageReceived(receiveDataMessage);\r\n\r\n        return () => {\r\n            socketManager.offMessageReceived();\r\n        }\r\n    });\r\n\r\n    function offerToMember(user) {\r\n        rtc.createOffer(user.id)\r\n            .then(({ pc, sessionDescription }) => {\r\n                pc.onicecandidate = (event) => { handleIceCandidate(user.id, event) };\r\n                pc.onaddstream = (event) => { handleRemoteStreamAdded(user.id, event); };\r\n                pc.onremovestream = handleRemoteStreamRemoved;\r\n                socketManager.sendMessageToUser('offer', user.id, sessionDescription);\r\n            });\r\n    }\r\n\r\n    function receiveDataMessage(data) {\r\n        switch (data.type) {\r\n            case 'offer':\r\n                rtc.receiveOffer(data.id, data.message)\r\n                    .then(pc => {\r\n                        pc.onicecandidate = (event) => { handleIceCandidate(data.id, event) };\r\n                        pc.onaddstream = (event) => { handleRemoteStreamAdded(data.id, event); };\r\n                        pc.onremovestream = handleRemoteStreamRemoved;\r\n                        rtc.createAnswer(data.id).then(sessionDescription => {\r\n                            socketManager.sendMessageToUser('answer', data.id, sessionDescription);\r\n                        })\r\n                    })\r\n                break;\r\n            case 'answer':\r\n                rtc.receiveAnswer(data.id, data.message);\r\n                break;\r\n            case 'candidate':\r\n                console.log('candidate');\r\n                console.log(data);\r\n                rtc.addIceCandidate(data.id, data.message);\r\n                break;\r\n            default:\r\n                console.log(data);\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleIceCandidate(id, event) {\r\n        if (event.candidate) {\r\n            socketManager.sendMessageToUser('candidate', id, event.candidate);\r\n        }\r\n    }\r\n\r\n    function handleRemoteStreamAdded(id, event) {\r\n        console.log(id, event);\r\n    }\r\n\r\n    function handleRemoteStreamRemoved(event) {\r\n        console.log(event);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Grid container spacing={3} className={styles.mainBox}>\r\n                <Grid item xs={12} md={12}>\r\n                    <Typography>TeleTele</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <MyInfoBox\r\n                        userName={userName}\r\n                        teamId={teamId}\r\n                    ></MyInfoBox>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <MyWorkBox\r\n\r\n                    >\r\n                    </MyWorkBox>\r\n                </Grid>\r\n            </Grid>\r\n            <MemberList className={styles.mainBox}\r\n                offerToMember={offerToMember}\r\n            ></MemberList>\r\n        </Container>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Button, Box, makeStyles, TextField } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles({\r\n    home: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    title: {\r\n        height: '3rem',\r\n        fontSize: '2rem'\r\n    },\r\n    startButton: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        color: '#fff',\r\n        width: '200px',\r\n        height: '50px',\r\n        borderRadius: '30px',\r\n        fontSize: '1.2rem'\r\n    },\r\n    joinButton: {\r\n        fontSize: '1.2rem'\r\n    }\r\n})\r\n\r\nexport default function Home() {\r\n    const styles = useStyles();\r\n    const history = useHistory();\r\n    const [started, setStarted] = useState(false);\r\n    const [teamId, setTeamId] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const myInfo = useSelector(state => state.myInfo);\r\n\r\n    useEffect(() => {\r\n        if (myInfo.id) {\r\n            setTeamId(myInfo.team);\r\n            setUserName(myInfo.name);\r\n        }\r\n    }, []);\r\n\r\n    function handleChange(e) {\r\n        setTeamId(e.target.value);\r\n    }\r\n    \r\n    function handleChangeMyName(e) {\r\n        setUserName(e.target.value);\r\n    }\r\n    function handleEnterKey(e) {\r\n        if (e.key === 'Enter') {\r\n            if (!started && teamId.trim().length <= 0) {\r\n                return;\r\n            } else if (started && userName.trim().length <= 0) {\r\n                return;\r\n            }\r\n\r\n            started ? setStarted(true) : joinTheTeam();\r\n        }\r\n    }\r\n    function joinTheTeam() {\r\n        if (!started && teamId.trim().length <= 0) {\r\n            return;\r\n        }\r\n        setStarted(true);\r\n    }\r\n    function handleClick() {\r\n        if (started && userName.trim().length <= 0) {\r\n            return;\r\n        }\r\n        history.push(`/team/${teamId}/${userName}`);\r\n    }\r\n\r\n    return (\r\n        <Box className={styles.home}>\r\n            <h2 className={styles.title}>TeleTele</h2>\r\n            <h3>\r\n                {!started && <>\r\n                    <TextField\r\n                        label=\"TEAM\"\r\n                        className={styles.joinTextField}\r\n                        onChange={handleChange}\r\n                        onKeyPress={handleEnterKey}\r\n                        value={teamId}\r\n                        required\r\n                    />\r\n                    <br/><br/>\r\n                    <Button\r\n                        className={styles.startButton}\r\n                        onClick={joinTheTeam}\r\n                    >JOIN\r\n                    </Button>\r\n                </>}\r\n                {started && <>\r\n                    <TextField\r\n                        label=\"MY NAME\"\r\n                        className={styles.joinTextField}\r\n                        onChange={handleChangeMyName}\r\n                        onKeyPress={handleEnterKey}\r\n                        value={userName}\r\n                        required\r\n                    />\r\n                    <br/><br/>\r\n                    <Button\r\n                        className={styles.startButton}\r\n                        onClick={handleClick}>START\r\n                    </Button>\r\n                </>}\r\n            </h3>\r\n        </Box >\r\n    )\r\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Main from './route/Main';\nimport Home from './route/Home';\n\nfunction App() {\n  return (\n    <Router basename=\"/our-telepathy\">\n      <Switch>\n        <Route path=\"/team/:teamId/:userName\">\n          <Main />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport myInfo from \"./myInfo/myInfo.reducer\";\r\nimport workingHours from \"./workingHours/workingHours.reducer\";\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n    whitelist: [\"myInfo\", \"workingHours\"]\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    myInfo,\r\n    workingHours\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './store';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst enhancedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(enhancedReducer);\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}